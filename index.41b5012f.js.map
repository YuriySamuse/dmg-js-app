{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-86e7d2037dba233e.js","node_modules/@parcel/runtime-js/lib/runtime-cd02a80cab1aa52c.js","node_modules/@parcel/runtime-js/lib/runtime-5bc59db45d813f3e.js","node_modules/@parcel/runtime-js/lib/runtime-ab840ad94f009df9.js","node_modules/@parcel/runtime-js/lib/runtime-64724369de4be6de.js","src/js/partners-contant.js","src/js/partners.js","src/js/mob-menu.js","node_modules/@parcel/runtime-js/lib/runtime-44dda1c6b425a03e.js","node_modules/@parcel/runtime-js/lib/runtime-6fbe2540a95a5e74.js","node_modules/@parcel/runtime-js/lib/runtime-17d6e41adf042ea1.js","node_modules/@parcel/runtime-js/lib/runtime-ef0dd3c9215bdf6a.js","node_modules/@parcel/runtime-js/lib/runtime-658cbffe6d014269.js","src/js/teams-api.js","src/js/teams.js","src/js/modal.js","node_modules/embla-carousel/src/components/utils.ts","node_modules/embla-carousel/src/components/EventStore.ts","node_modules/embla-carousel/src/components/Animations.ts","node_modules/embla-carousel/src/components/Limit.ts","node_modules/embla-carousel/src/components/Counter.ts","node_modules/embla-carousel/src/components/DragHandler.ts","node_modules/embla-carousel/src/components/DragTracker.ts","node_modules/embla-carousel/src/components/ResizeHandler.ts","node_modules/embla-carousel/src/components/ScrollBounds.ts","node_modules/embla-carousel/src/components/ScrollLooper.ts","node_modules/embla-carousel/src/components/ScrollTarget.ts","node_modules/embla-carousel/src/components/Vector1d.ts","node_modules/embla-carousel/src/components/Translate.ts","node_modules/embla-carousel/src/components/SlideLooper.ts","node_modules/embla-carousel/src/components/SlidesHandler.ts","node_modules/embla-carousel/src/components/SlidesInView.ts","node_modules/embla-carousel/src/components/SlidesToScroll.ts","node_modules/embla-carousel/src/components/Engine.ts","node_modules/embla-carousel/src/components/NodeRects.ts","node_modules/embla-carousel/src/components/Axis.ts","node_modules/embla-carousel/src/components/PercentOfView.ts","node_modules/embla-carousel/src/components/Alignment.ts","node_modules/embla-carousel/src/components/SlideSizes.ts","node_modules/embla-carousel/src/components/ScrollSnaps.ts","node_modules/embla-carousel/src/components/ScrollContain.ts","node_modules/embla-carousel/src/components/ScrollLimit.ts","node_modules/embla-carousel/src/components/ScrollBody.ts","node_modules/embla-carousel/src/components/ScrollTo.ts","node_modules/embla-carousel/src/components/ScrollProgress.ts","node_modules/embla-carousel/src/components/SlideRegistry.ts","node_modules/embla-carousel/src/components/SlideFocus.ts","node_modules/embla-carousel/src/components/Options.ts","node_modules/embla-carousel/src/components/OptionsHandler.ts","node_modules/embla-carousel/src/components/EmblaCarousel.ts","node_modules/embla-carousel/src/components/PluginsHandler.ts","node_modules/embla-carousel/src/components/EventHandler.ts","src/js/embala/EmbalaCarouselArrowButton.js","src/js/embala-carousel.js","src/js/embala/EmbalaCarouselDotButton.js","node_modules/lodash.throttle/index.js","src/js/contacts.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"5ZPII\\\":\\\"index.41b5012f.js\\\",\\\"dixhe\\\":\\\"6.03af396c.png\\\",\\\"8sZou\\\":\\\"3.5ae3b099.png\\\",\\\"1LsQd\\\":\\\"2.1e485261.png\\\",\\\"5PEsv\\\":\\\"11.233690eb.jpg\\\",\\\"2xmZ8\\\":\\\"volkova-marina.286e69cd.png\\\",\\\"afdx9\\\":\\\"nadiya-motorna.c65b5ef3.png\\\",\\\"XzbPy\\\":\\\"oksana-mitkovsaya.6122e256.png\\\",\\\"fIKh0\\\":\\\"olya-kulish.133a50c9.png\\\",\\\"6woR1\\\":\\\"teterina-anastasiya.d3c4a594.png\\\"}\"));","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"dixhe\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"8sZou\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"1LsQd\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"5PEsv\")).toString();","import sinevo from '../images/partners/6.png';\nimport goon from '../images/partners/3.png';\nimport simplbaby from '../images/partners/2.png';\nimport buhen from '../images/partners/11.jpg';\n\nconst partners = [\n  {\n    name: 'Сінево',\n    imgURL: sinevo,\n    width: '270',\n    URL: 'https://www.synevo.ua/ua',\n  },\n  {\n    name: 'Smile Baby',\n    imgURL: simplbaby,\n    width: '270',\n    URL: 'https://smilebaby.ua/',\n  },\n  {\n    name: 'Bübchen',\n    imgURL: buhen,\n    width: '270',\n    URL: 'https://buebchen.de/',\n  },\n  {\n    name: 'Goo.N',\n    imgURL: goon,\n    width: '270',\n    URL: 'https://www.goondiaper.com/',\n  },\n  // { name: \"Сінево\", imgURL: \"./img/partners/6.png\", width: \"270\", URL: \"#\" },\n  // { name: \"Сінево\", imgURL: \"./img/partners/6.png\", width: \"270\", URL: \"#\" },\n  // { name: \"Сінево\", imgURL: \"./img/partners/6.png\", width: \"270\", URL: \"#\" },\n  // { name: \"Сінево\", imgURL: \"./img/partners/6.png\", width: \"270\", URL: \"#\" },\n];\n\nexport default partners;\n","import partners from './partners-contant';\n\nconst partnersContainer = document.querySelector('.js-partners');\nconst partnerCardMarkup = createPartnerCardMarkup(partners);\npartnersContainer.insertAdjacentHTML('beforeend', partnerCardMarkup);\n\npartnersContainer.addEventListener('mouseover', onPartnerContainerMousover);\n\nfunction createPartnerCardMarkup(partners) {\n  return partners\n    .map(({ name, imgURL, width, URL }) => {\n      return `\n        <li class=\"partners__item\">\n            <a\n                class=\"partners__link link\"\n                href=\"${URL}\"\n            >\n                <div class=\"partners__thumb-img\">\n                    <img\n                        class=\"partners__img\"\n                        src=\"${imgURL}\"\n                        alt=\"${name}\"\n                        width=\"${width}\"\n                    />\n                </div>\n                <p>${name}</p>\n            </a>\n        </li>\n    `;\n    })\n    .join('');\n}\n\nfunction onPartnerContainerMousover(evt) {\n  const partnerImgEl = evt.target.classList.contains('partners__img');\n  if (!partnerImgEl) {\n    return;\n  }\n\n  const partnerEl = evt.target;\n  const parentPartnerCard = partnerEl.closest('.partners__item');\n  removeActiveCardClass();\n  addActiveCardClass(parentPartnerCard);\n}\n\nfunction removeActiveCardClass() {\n  const currentActiveCard = document.querySelector(\n    '.partners__item.animate__animated'\n  );\n  if (currentActiveCard) {\n    currentActiveCard.classList.remove('animate__animated', 'animate__bounce');\n  }\n}\n\nfunction addActiveCardClass(card) {\n  card.classList.add('animate__animated', 'animate__bounce');\n}\n","(() => {\n\tconst refs = {\n\t\topenMenuBtn: document.querySelector(\".menu-open\"),\n\t\tcloseMenuBtn: document.querySelector(\".menu-close\"),\n\t\tmenu: document.querySelector(\".mob-menu\"),\n\t\tbody: document.querySelector(\"body\"),\n\t\tmenuList: document.querySelector(\".mob-menu__list\"),\n\t};\n\n\trefs.openMenuBtn.addEventListener(\"click\", toggleMenu);\n\trefs.closeMenuBtn.addEventListener(\"click\", toggleMenu);\n\trefs.menuList.addEventListener(\"click\", removeMenu);\n\n\tfunction toggleMenu() {\n\t\trefs.menu.classList.toggle(\"is-hidden\");\n\t\trefs.body.classList.toggle(\"no-scroll\");\n\t\trefs.menuList.classList.toggle(\"no-scroll\");\n\t}\n\n\tfunction removeMenu() {\n\t\trefs.menu.classList.add(\"is-hidden\");\n\t\trefs.body.classList.remove(\"no-scroll\");\n\t}\n})();\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"2xmZ8\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"afdx9\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"XzbPy\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"fIKh0\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"6woR1\")).toString();","import volkova from '/src/images/teams/volkova-marina.png';\nimport motorna from '/src/images/teams/nadiya-motorna.png';\nimport mitkovska from '/src/images/teams/oksana-mitkovsaya.png';\nimport kulish from '/src/images/teams/olya-kulish.png';\nimport teterina from '/src/images/teams/teterina-anastasiya.png';\n\nconst teams = [\n  {\n    name: 'Волкова Маріна',\n    imgURL: volkova,\n    description: 'Засновник компанії',\n  },\n  {\n    name: 'Тетерина Анастасія',\n    imgURL: teterina,\n    description: 'Регіональний менеджер, лікар – неонатолог (м. Харків)',\n  },\n  {\n    name: 'Надія Моторна',\n    imgURL: motorna,\n    description: 'Регіональний менеджер, сімейний лікар (м. Одеса)',\n  },\n  {\n    name: 'Оксана Митківська',\n    imgURL: mitkovska,\n    description: 'Керівник відділу продажу',\n  },\n  {\n    name: 'Оля Куліш',\n    imgURL: kulish,\n    description: ' ',\n  },\n];\n\nexport default teams;\n","import teams from './teams-api';\n\nconst teamsContainer = document.querySelector('.js-teams');\n\nconst teamCardMarkup = createTeamCardMarkup(teams);\nteamsContainer.insertAdjacentHTML('beforeend', teamCardMarkup);\n\n// teamsContainer.addEventListener('mouseover', onTeamsContainerMousover);\n\nfunction createTeamCardMarkup(teams) {\n  return teams\n    .map(({ name, imgURL, description }) => {\n      return `\n        <li class=\"teams__item embla__slide\">\n        <div class=\"embla__slide__number\">\n          <img\n            src=\"${imgURL}\"\n            alt=\"${name}\"\n            class=\"teams__img \"\n          />\n          <h3 class=\"title\">${name}</h3>\n          <p>${description}</p>\n        </div>\n      </li>\n      `;\n    })\n    .join('');\n}\n\n// function onTeamsContainerMousover(evt) {\n//   const teamsImgEl = evt.target.classList.contains('teams__img');\n//   if (!teamsImgEl) {\n//     return;\n//   }\n\n//   const teamEl = evt.target;\n//   const parentTeamCard = teamEl.closest('.teams__item');\n//   removeActiveCardClass();\n//   addActiveCardClass(parentTeamCard);\n// }\n\n// function removeActiveCardClass() {\n//   const currentActiveCard = document.querySelector(\n//     '.teams__item.animate__animated'\n//   );\n//   if (currentActiveCard) {\n//     currentActiveCard.classList.remove('animate__animated', 'animate__pulse');\n//   }\n// }\n\n// function addActiveCardClass(card) {\n//   card.classList.add('animate__animated', 'animate__pulse');\n// }\n","const refs = {\n  openModalBtns: document.querySelectorAll('[data-action=\"open-modal\"]'),\n  closeModalBtns: document.querySelectorAll('[data-action=\"close-modal\"]'),\n};\n\nrefs.openModalBtns.forEach(elem => {\n  elem.addEventListener('click', onOpenModal);\n});\n\nrefs.closeModalBtns.forEach(elem => {\n  elem.addEventListener('click', onCloseModal);\n});\n\nfunction onOpenModal(event) {\n  window.addEventListener('keydown', onEscKeyPress);\n  const modalId = event.currentTarget.dataset.id;\n  const modal = document.getElementById(modalId);\n  const backdrop = modal.closest('.backdrop');\n  backdrop.addEventListener('click', onBackdropClick);\n  backdrop.classList.add('active');\n  document.body.classList.add('show-modal');\n}\n\nfunction onCloseModal() {\n  document.body.classList.remove('show-modal');\n  const backdrop = document.querySelector('.backdrop.active');\n  backdrop.removeEventListener('click', onBackdropClick);\n  backdrop.classList.remove('active');\n  window.removeEventListener('keydown', onEscKeyPress);\n}\n\nfunction onBackdropClick(event) {\n  if (event.currentTarget === event.target) {\n    onCloseModal();\n  }\n}\n\nfunction onEscKeyPress(event) {\n  const ESC_KEY_CODE = 'Escape';\n  const isEscKey = event.code === ESC_KEY_CODE;\n  if (isEscKey) {\n    onCloseModal();\n  }\n}\n","import { PointerEventType } from './DragTracker'\n\nexport type WindowType = Window & typeof globalThis\n\nexport function isNumber(subject: unknown): subject is number {\n  return typeof subject === 'number'\n}\n\nexport function isString(subject: unknown): subject is string {\n  return typeof subject === 'string'\n}\n\nexport function isBoolean(subject: unknown): subject is boolean {\n  return typeof subject === 'boolean'\n}\n\nexport function isObject(subject: unknown): subject is Record<string, unknown> {\n  return Object.prototype.toString.call(subject) === '[object Object]'\n}\n\nexport function mathAbs(n: number): number {\n  return Math.abs(n)\n}\n\nexport function mathSign(n: number): number {\n  return Math.sign(n)\n}\n\nexport function deltaAbs(valueB: number, valueA: number): number {\n  return mathAbs(valueB - valueA)\n}\n\nexport function factorAbs(valueB: number, valueA: number): number {\n  if (valueB === 0 || valueA === 0) return 0\n  if (mathAbs(valueB) <= mathAbs(valueA)) return 0\n  const diff = deltaAbs(mathAbs(valueB), mathAbs(valueA))\n  return mathAbs(diff / valueB)\n}\n\nexport function arrayKeys<Type>(array: Type[]): number[] {\n  return objectKeys(array).map(Number)\n}\n\nexport function arrayLast<Type>(array: Type[]): Type {\n  return array[arrayLastIndex(array)]\n}\n\nexport function arrayLastIndex<Type>(array: Type[]): number {\n  return Math.max(0, array.length - 1)\n}\n\nexport function arrayIsLastIndex<Type>(array: Type[], index: number): boolean {\n  return index === arrayLastIndex(array)\n}\n\nexport function arrayFromNumber(n: number, startAt: number = 0): number[] {\n  return Array.from(Array(n), (_, i) => startAt + i)\n}\n\nexport function objectKeys<Type extends object>(object: Type): string[] {\n  return Object.keys(object)\n}\n\nexport function objectsMergeDeep(\n  objectA: Record<string, unknown>,\n  objectB: Record<string, unknown>\n): Record<string, unknown> {\n  return [objectA, objectB].reduce((mergedObjects, currentObject) => {\n    objectKeys(currentObject).forEach((key) => {\n      const valueA = mergedObjects[key]\n      const valueB = currentObject[key]\n      const areObjects = isObject(valueA) && isObject(valueB)\n\n      mergedObjects[key] = areObjects\n        ? objectsMergeDeep(valueA, valueB)\n        : valueB\n    })\n    return mergedObjects\n  }, {})\n}\n\nexport function isMouseEvent(\n  evt: PointerEventType,\n  ownerWindow: WindowType\n): evt is MouseEvent {\n  return (\n    typeof ownerWindow.MouseEvent !== 'undefined' &&\n    evt instanceof ownerWindow.MouseEvent\n  )\n}\n","type EventNameType = keyof DocumentEventMap | keyof WindowEventMap\ntype EventHandlerType = (evt: any) => void\ntype EventOptionsType = boolean | AddEventListenerOptions | undefined\ntype EventRemoverType = () => void\n\nexport type EventStoreType = {\n  add: (\n    node: EventTarget,\n    type: EventNameType,\n    handler: EventHandlerType,\n    options?: EventOptionsType\n  ) => EventStoreType\n  clear: () => void\n}\n\nexport function EventStore(): EventStoreType {\n  let listeners: EventRemoverType[] = []\n\n  function add(\n    node: EventTarget,\n    type: EventNameType,\n    handler: EventHandlerType,\n    options: EventOptionsType = { passive: true }\n  ): EventStoreType {\n    let removeListener: EventRemoverType\n\n    if ('addEventListener' in node) {\n      node.addEventListener(type, handler, options)\n      removeListener = () => node.removeEventListener(type, handler, options)\n    } else {\n      const legacyMediaQueryList = <MediaQueryList>node\n      legacyMediaQueryList.addListener(handler)\n      removeListener = () => legacyMediaQueryList.removeListener(handler)\n    }\n\n    listeners.push(removeListener)\n    return self\n  }\n\n  function clear(): void {\n    listeners = listeners.filter((remove) => remove())\n  }\n\n  const self: EventStoreType = {\n    add,\n    clear\n  }\n  return self\n}\n","import { EngineType } from './Engine'\nimport { EventStore } from './EventStore'\nimport { mathAbs, WindowType } from './utils'\n\nexport type AnimationsUpdateType = (engine: EngineType) => void\nexport type AnimationsRenderType = (\n  engine: EngineType,\n  lagOffset: number\n) => void\n\nexport type AnimationsType = {\n  init: () => void\n  destroy: () => void\n  start: () => void\n  stop: () => void\n  update: () => void\n  render: (lagOffset: number) => void\n}\n\nexport function Animations(\n  ownerDocument: Document,\n  ownerWindow: WindowType,\n  update: AnimationsType['update'],\n  render: AnimationsType['render']\n): AnimationsType {\n  const documentVisibleHandler = EventStore()\n  const timeStep = 1000 / 60\n  let lastTimeStamp: number | null = null\n  let lag = 0\n  let animationFrame = 0\n\n  function init(): void {\n    documentVisibleHandler.add(ownerDocument, 'visibilitychange', () => {\n      if (ownerDocument.hidden) reset()\n    })\n  }\n\n  function destroy(): void {\n    stop()\n    documentVisibleHandler.clear()\n  }\n\n  function animate(timeStamp: DOMHighResTimeStamp): void {\n    if (!animationFrame) return\n    if (!lastTimeStamp) lastTimeStamp = timeStamp\n\n    const elapsed = timeStamp - lastTimeStamp\n    lastTimeStamp = timeStamp\n    lag += elapsed\n\n    while (lag >= timeStep) {\n      update()\n      lag -= timeStep\n    }\n\n    const lagOffset = mathAbs(lag / timeStep)\n    render(lagOffset)\n\n    if (animationFrame) ownerWindow.requestAnimationFrame(animate)\n  }\n\n  function start(): void {\n    if (animationFrame) return\n\n    animationFrame = ownerWindow.requestAnimationFrame(animate)\n  }\n\n  function stop(): void {\n    ownerWindow.cancelAnimationFrame(animationFrame)\n    lastTimeStamp = null\n    lag = 0\n    animationFrame = 0\n  }\n\n  function reset(): void {\n    lastTimeStamp = null\n    lag = 0\n  }\n\n  const self: AnimationsType = {\n    init,\n    destroy,\n    start,\n    stop,\n    update,\n    render\n  }\n  return self\n}\n","import { mathAbs } from './utils'\n\nexport type LimitType = {\n  min: number\n  max: number\n  length: number\n  constrain: (n: number) => number\n  reachedAny: (n: number) => boolean\n  reachedMax: (n: number) => boolean\n  reachedMin: (n: number) => boolean\n  removeOffset: (n: number) => number\n}\n\nexport function Limit(min: number = 0, max: number = 0): LimitType {\n  const length = mathAbs(min - max)\n\n  function reachedMin(n: number): boolean {\n    return n < min\n  }\n\n  function reachedMax(n: number): boolean {\n    return n > max\n  }\n\n  function reachedAny(n: number): boolean {\n    return reachedMin(n) || reachedMax(n)\n  }\n\n  function constrain(n: number): number {\n    if (!reachedAny(n)) return n\n    return reachedMin(n) ? min : max\n  }\n\n  function removeOffset(n: number): number {\n    if (!length) return n\n    return n - length * Math.ceil((n - max) / length)\n  }\n\n  const self: LimitType = {\n    length,\n    max,\n    min,\n    constrain,\n    reachedAny,\n    reachedMax,\n    reachedMin,\n    removeOffset\n  }\n  return self\n}\n","import { Limit } from './Limit'\nimport { mathAbs } from './utils'\n\nexport type CounterType = {\n  get: () => number\n  set: (n: number) => CounterType\n  add: (n: number) => CounterType\n  clone: () => CounterType\n}\n\nexport function Counter(\n  max: number,\n  start: number,\n  loop: boolean\n): CounterType {\n  const { constrain } = Limit(0, max)\n  const loopEnd = max + 1\n  let counter = withinLimit(start)\n\n  function withinLimit(n: number): number {\n    return !loop ? constrain(n) : mathAbs((loopEnd + n) % loopEnd)\n  }\n\n  function get(): number {\n    return counter\n  }\n\n  function set(n: number): CounterType {\n    counter = withinLimit(n)\n    return self\n  }\n\n  function add(n: number): CounterType {\n    return clone().set(get() + n)\n  }\n\n  function clone(): CounterType {\n    return Counter(max, get(), loop)\n  }\n\n  const self: CounterType = {\n    get,\n    set,\n    add,\n    clone\n  }\n  return self\n}\n","import { EmblaCarouselType } from './EmblaCarousel'\nimport { AnimationsType } from './Animations'\nimport { CounterType } from './Counter'\nimport { DragTrackerType, PointerEventType } from './DragTracker'\nimport { EventHandlerType } from './EventHandler'\nimport { AxisType } from './Axis'\nimport { EventStore } from './EventStore'\nimport { ScrollBodyType } from './ScrollBody'\nimport { ScrollTargetType } from './ScrollTarget'\nimport { ScrollToType } from './ScrollTo'\nimport { Vector1DType } from './Vector1d'\nimport { PercentOfViewType } from './PercentOfView'\nimport { Limit } from './Limit'\nimport {\n  deltaAbs,\n  factorAbs,\n  isBoolean,\n  isMouseEvent,\n  mathAbs,\n  mathSign,\n  WindowType\n} from './utils'\n\ntype DragHandlerCallbackType = (\n  emblaApi: EmblaCarouselType,\n  evt: PointerEventType\n) => boolean | void\n\nexport type DragHandlerOptionType = boolean | DragHandlerCallbackType\n\nexport type DragHandlerType = {\n  init: (emblaApi: EmblaCarouselType) => void\n  destroy: () => void\n  pointerDown: () => boolean\n}\n\nexport function DragHandler(\n  axis: AxisType,\n  rootNode: HTMLElement,\n  ownerDocument: Document,\n  ownerWindow: WindowType,\n  target: Vector1DType,\n  dragTracker: DragTrackerType,\n  location: Vector1DType,\n  animation: AnimationsType,\n  scrollTo: ScrollToType,\n  scrollBody: ScrollBodyType,\n  scrollTarget: ScrollTargetType,\n  index: CounterType,\n  eventHandler: EventHandlerType,\n  percentOfView: PercentOfViewType,\n  dragFree: boolean,\n  dragThreshold: number,\n  skipSnaps: boolean,\n  baseFriction: number,\n  watchDrag: DragHandlerOptionType\n): DragHandlerType {\n  const { cross: crossAxis, direction } = axis\n  const focusNodes = ['INPUT', 'SELECT', 'TEXTAREA']\n  const nonPassiveEvent = { passive: false }\n  const initEvents = EventStore()\n  const dragEvents = EventStore()\n  const goToNextThreshold = Limit(50, 225).constrain(percentOfView.measure(20))\n  const snapForceBoost = { mouse: 300, touch: 400 }\n  const freeForceBoost = { mouse: 500, touch: 600 }\n  const baseSpeed = dragFree ? 43 : 25\n\n  let isMoving = false\n  let startScroll = 0\n  let startCross = 0\n  let pointerIsDown = false\n  let preventScroll = false\n  let preventClick = false\n  let isMouse = false\n\n  function init(emblaApi: EmblaCarouselType): void {\n    if (!watchDrag) return\n\n    function downIfAllowed(evt: PointerEventType): void {\n      if (isBoolean(watchDrag) || watchDrag(emblaApi, evt)) down(evt)\n    }\n\n    const node = rootNode\n    initEvents\n      .add(node, 'dragstart', (evt) => evt.preventDefault(), nonPassiveEvent)\n      .add(node, 'touchmove', () => undefined, nonPassiveEvent)\n      .add(node, 'touchend', () => undefined)\n      .add(node, 'touchstart', downIfAllowed)\n      .add(node, 'mousedown', downIfAllowed)\n      .add(node, 'touchcancel', up)\n      .add(node, 'contextmenu', up)\n      .add(node, 'click', click, true)\n  }\n\n  function destroy(): void {\n    initEvents.clear()\n    dragEvents.clear()\n  }\n\n  function addDragEvents(): void {\n    const node = isMouse ? ownerDocument : rootNode\n    dragEvents\n      .add(node, 'touchmove', move, nonPassiveEvent)\n      .add(node, 'touchend', up)\n      .add(node, 'mousemove', move, nonPassiveEvent)\n      .add(node, 'mouseup', up)\n  }\n\n  function isFocusNode(node: Element): boolean {\n    const nodeName = node.nodeName || ''\n    return focusNodes.includes(nodeName)\n  }\n\n  function forceBoost(): number {\n    const boost = dragFree ? freeForceBoost : snapForceBoost\n    const type = isMouse ? 'mouse' : 'touch'\n    return boost[type]\n  }\n\n  function allowedForce(force: number, targetChanged: boolean): number {\n    const next = index.add(mathSign(force) * -1)\n    const baseForce = scrollTarget.byDistance(force, !dragFree).distance\n\n    if (dragFree || mathAbs(force) < goToNextThreshold) return baseForce\n    if (skipSnaps && targetChanged) return baseForce * 0.5\n\n    return scrollTarget.byIndex(next.get(), 0).distance\n  }\n\n  function down(evt: PointerEventType): void {\n    const isMouseEvt = isMouseEvent(evt, ownerWindow)\n    isMouse = isMouseEvt\n    preventClick = dragFree && isMouseEvt && !evt.buttons && isMoving\n    isMoving = deltaAbs(target.get(), location.get()) >= 2\n\n    if (isMouseEvt && evt.button !== 0) return\n    if (isFocusNode(evt.target as Element)) return\n\n    pointerIsDown = true\n    dragTracker.pointerDown(evt)\n    scrollBody.useFriction(0).useDuration(0)\n    target.set(location)\n    addDragEvents()\n    startScroll = dragTracker.readPoint(evt)\n    startCross = dragTracker.readPoint(evt, crossAxis)\n    eventHandler.emit('pointerDown')\n  }\n\n  function move(evt: PointerEventType): void {\n    const lastScroll = dragTracker.readPoint(evt)\n    const lastCross = dragTracker.readPoint(evt, crossAxis)\n    const diffScroll = deltaAbs(lastScroll, startScroll)\n    const diffCross = deltaAbs(lastCross, startCross)\n\n    if (!preventScroll && !isMouse) {\n      if (!evt.cancelable) return up(evt)\n      preventScroll = diffScroll > diffCross\n      if (!preventScroll) return up(evt)\n    }\n    const diff = dragTracker.pointerMove(evt)\n    if (diffScroll > dragThreshold) preventClick = true\n\n    scrollBody.useFriction(0.3).useDuration(1)\n    animation.start()\n    target.add(direction(diff))\n    evt.preventDefault()\n  }\n\n  function up(evt: PointerEventType): void {\n    const currentLocation = scrollTarget.byDistance(0, false)\n    const targetChanged = currentLocation.index !== index.get()\n    const rawForce = dragTracker.pointerUp(evt) * forceBoost()\n    const force = allowedForce(direction(rawForce), targetChanged)\n    const forceFactor = factorAbs(rawForce, force)\n    const speed = baseSpeed - 10 * forceFactor\n    const friction = baseFriction + forceFactor / 50\n\n    preventScroll = false\n    pointerIsDown = false\n    dragEvents.clear()\n    scrollBody.useDuration(speed).useFriction(friction)\n    scrollTo.distance(force, !dragFree)\n    isMouse = false\n    eventHandler.emit('pointerUp')\n  }\n\n  function click(evt: MouseEvent): void {\n    if (preventClick) {\n      evt.stopPropagation()\n      evt.preventDefault()\n      preventClick = false\n    }\n  }\n\n  function pointerDown(): boolean {\n    return pointerIsDown\n  }\n\n  const self: DragHandlerType = {\n    init,\n    pointerDown,\n    destroy\n  }\n  return self\n}\n","import { AxisOptionType, AxisType } from './Axis'\nimport { isMouseEvent, mathAbs, WindowType } from './utils'\n\ntype PointerCoordType = keyof Touch | keyof MouseEvent\nexport type PointerEventType = TouchEvent | MouseEvent\n\nexport type DragTrackerType = {\n  pointerDown: (evt: PointerEventType) => number\n  pointerMove: (evt: PointerEventType) => number\n  pointerUp: (evt: PointerEventType) => number\n  readPoint: (evt: PointerEventType, evtAxis?: AxisOptionType) => number\n}\n\nexport function DragTracker(\n  axis: AxisType,\n  ownerWindow: WindowType\n): DragTrackerType {\n  const logInterval = 170\n\n  let startEvent: PointerEventType\n  let lastEvent: PointerEventType\n\n  function readTime(evt: PointerEventType): number {\n    return evt.timeStamp\n  }\n\n  function readPoint(evt: PointerEventType, evtAxis?: AxisOptionType): number {\n    const property = evtAxis || axis.scroll\n    const coord: PointerCoordType = `client${property === 'x' ? 'X' : 'Y'}`\n    return (isMouseEvent(evt, ownerWindow) ? evt : evt.touches[0])[coord]\n  }\n\n  function pointerDown(evt: PointerEventType): number {\n    startEvent = evt\n    lastEvent = evt\n    return readPoint(evt)\n  }\n\n  function pointerMove(evt: PointerEventType): number {\n    const diff = readPoint(evt) - readPoint(lastEvent)\n    const expired = readTime(evt) - readTime(startEvent) > logInterval\n\n    lastEvent = evt\n    if (expired) startEvent = evt\n    return diff\n  }\n\n  function pointerUp(evt: PointerEventType): number {\n    if (!startEvent || !lastEvent) return 0\n    const diffDrag = readPoint(lastEvent) - readPoint(startEvent)\n    const diffTime = readTime(evt) - readTime(startEvent)\n    const expired = readTime(evt) - readTime(lastEvent) > logInterval\n    const force = diffDrag / diffTime\n    const isFlick = diffTime && !expired && mathAbs(force) > 0.1\n\n    return isFlick ? force : 0\n  }\n\n  const self: DragTrackerType = {\n    pointerDown,\n    pointerMove,\n    pointerUp,\n    readPoint\n  }\n  return self\n}\n","import { AxisType } from './Axis'\nimport { EmblaCarouselType } from './EmblaCarousel'\nimport { EventHandlerType } from './EventHandler'\nimport { NodeRectsType } from './NodeRects'\nimport { isBoolean, mathAbs, WindowType } from './utils'\n\ntype ResizeHandlerCallbackType = (\n  emblaApi: EmblaCarouselType,\n  entries: ResizeObserverEntry[]\n) => boolean | void\n\nexport type ResizeHandlerOptionType = boolean | ResizeHandlerCallbackType\n\nexport type ResizeHandlerType = {\n  init: (emblaApi: EmblaCarouselType) => void\n  destroy: () => void\n}\n\nexport function ResizeHandler(\n  container: HTMLElement,\n  eventHandler: EventHandlerType,\n  ownerWindow: WindowType,\n  slides: HTMLElement[],\n  axis: AxisType,\n  watchResize: ResizeHandlerOptionType,\n  nodeRects: NodeRectsType\n): ResizeHandlerType {\n  let resizeObserver: ResizeObserver\n  let containerSize: number\n  let slideSizes: number[] = []\n  let destroyed = false\n\n  function readSize(node: HTMLElement): number {\n    return axis.measureSize(nodeRects.measure(node))\n  }\n\n  function init(emblaApi: EmblaCarouselType): void {\n    if (!watchResize) return\n\n    containerSize = readSize(container)\n    slideSizes = slides.map(readSize)\n\n    function defaultCallback(entries: ResizeObserverEntry[]): void {\n      for (const entry of entries) {\n        const isContainer = entry.target === container\n        const slideIndex = slides.indexOf(<HTMLElement>entry.target)\n        const lastSize = isContainer ? containerSize : slideSizes[slideIndex]\n        const newSize = readSize(isContainer ? container : slides[slideIndex])\n        const diffSize = mathAbs(newSize - lastSize)\n\n        if (diffSize >= 0.5) {\n          ownerWindow.requestAnimationFrame(() => {\n            emblaApi.reInit()\n            eventHandler.emit('resize')\n          })\n          break\n        }\n      }\n    }\n\n    resizeObserver = new ResizeObserver((entries) => {\n      if (destroyed) return\n      if (isBoolean(watchResize) || watchResize(emblaApi, entries)) {\n        defaultCallback(entries)\n      }\n    })\n\n    const observeNodes = [container].concat(slides)\n    observeNodes.forEach((node) => resizeObserver.observe(node))\n  }\n\n  function destroy(): void {\n    if (resizeObserver) resizeObserver.disconnect()\n    destroyed = true\n  }\n\n  const self: ResizeHandlerType = {\n    init,\n    destroy\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\nimport { ScrollBodyType } from './ScrollBody'\nimport { Vector1DType } from './Vector1d'\nimport { mathAbs } from './utils'\nimport { PercentOfViewType } from './PercentOfView'\n\nexport type ScrollBoundsType = {\n  constrain: (pointerDown: boolean) => void\n  toggleActive: (active: boolean) => void\n}\n\nexport function ScrollBounds(\n  limit: LimitType,\n  offsetLocation: Vector1DType,\n  target: Vector1DType,\n  scrollBody: ScrollBodyType,\n  percentOfView: PercentOfViewType\n): ScrollBoundsType {\n  const pullBackThreshold = percentOfView.measure(10)\n  const edgeOffsetTolerance = percentOfView.measure(50)\n  const frictionLimit = Limit(0.1, 0.99)\n  let disabled = false\n\n  function shouldConstrain(): boolean {\n    if (disabled) return false\n    if (!limit.reachedAny(target.get())) return false\n    if (!limit.reachedAny(offsetLocation.get())) return false\n    return true\n  }\n\n  function constrain(pointerDown: boolean): void {\n    if (!shouldConstrain()) return\n    const edge = limit.reachedMin(offsetLocation.get()) ? 'min' : 'max'\n    const diffToEdge = mathAbs(limit[edge] - offsetLocation.get())\n    const diffToTarget = target.get() - offsetLocation.get()\n    const friction = frictionLimit.constrain(diffToEdge / edgeOffsetTolerance)\n\n    target.subtract(diffToTarget * friction)\n\n    if (!pointerDown && mathAbs(diffToTarget) < pullBackThreshold) {\n      target.set(limit.constrain(target.get()))\n      scrollBody.useDuration(25).useBaseFriction()\n    }\n  }\n\n  function toggleActive(active: boolean): void {\n    disabled = !active\n  }\n\n  const self: ScrollBoundsType = {\n    constrain,\n    toggleActive\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\nimport { Vector1DType } from './Vector1d'\n\nexport type ScrollLooperType = {\n  loop: (direction: number) => void\n}\n\nexport function ScrollLooper(\n  contentSize: number,\n  limit: LimitType,\n  offsetLocation: Vector1DType,\n  vectors: Vector1DType[]\n): ScrollLooperType {\n  const jointSafety = 0.1\n  const min = limit.min + jointSafety\n  const max = limit.max + jointSafety\n  const { reachedMin, reachedMax } = Limit(min, max)\n\n  function shouldLoop(direction: number): boolean {\n    if (direction === 1) return reachedMax(offsetLocation.get())\n    if (direction === -1) return reachedMin(offsetLocation.get())\n    return false\n  }\n\n  function loop(direction: number): void {\n    if (!shouldLoop(direction)) return\n\n    const loopDistance = contentSize * (direction * -1)\n    vectors.forEach((v) => v.add(loopDistance))\n  }\n\n  const self: ScrollLooperType = {\n    loop\n  }\n  return self\n}\n","import { LimitType } from './Limit'\nimport { Vector1DType } from './Vector1d'\nimport { arrayLast, mathAbs, mathSign } from './utils'\n\nexport type TargetType = {\n  distance: number\n  index: number\n}\n\nexport type ScrollTargetType = {\n  byIndex: (target: number, direction: number) => TargetType\n  byDistance: (force: number, snap: boolean) => TargetType\n  shortcut: (target: number, direction: number) => number\n}\n\nexport function ScrollTarget(\n  loop: boolean,\n  scrollSnaps: number[],\n  contentSize: number,\n  limit: LimitType,\n  targetVector: Vector1DType\n): ScrollTargetType {\n  const { reachedAny, removeOffset, constrain } = limit\n\n  function minDistance(distances: number[]): number {\n    return distances.concat().sort((a, b) => mathAbs(a) - mathAbs(b))[0]\n  }\n\n  function findTargetSnap(target: number): TargetType {\n    const distance = loop ? removeOffset(target) : constrain(target)\n    const ascDiffsToSnaps = scrollSnaps\n      .map((snap, index) => ({ diff: shortcut(snap - distance, 0), index }))\n      .sort((d1, d2) => mathAbs(d1.diff) - mathAbs(d2.diff))\n\n    const { index } = ascDiffsToSnaps[0]\n    return { index, distance }\n  }\n\n  function shortcut(target: number, direction: number): number {\n    const targets = [target, target + contentSize, target - contentSize]\n\n    if (!loop) return targets[0]\n    if (!direction) return minDistance(targets)\n\n    const matchingTargets = targets.filter((t) => mathSign(t) === direction)\n    if (matchingTargets.length) return minDistance(matchingTargets)\n    return arrayLast(targets) - contentSize\n  }\n\n  function byIndex(index: number, direction: number): TargetType {\n    const diffToSnap = scrollSnaps[index] - targetVector.get()\n    const distance = shortcut(diffToSnap, direction)\n    return { index, distance }\n  }\n\n  function byDistance(distance: number, snap: boolean): TargetType {\n    const target = targetVector.get() + distance\n    const { index, distance: targetSnapDistance } = findTargetSnap(target)\n    const reachedBound = !loop && reachedAny(target)\n\n    if (!snap || reachedBound) return { index, distance }\n\n    const diffToSnap = scrollSnaps[index] - targetSnapDistance\n    const snapDistance = distance + shortcut(diffToSnap, 0)\n\n    return { index, distance: snapDistance }\n  }\n\n  const self: ScrollTargetType = {\n    byDistance,\n    byIndex,\n    shortcut\n  }\n  return self\n}\n","import { isNumber } from './utils'\n\nexport type Vector1DType = {\n  get: () => number\n  set: (n: Vector1DType | number) => void\n  add: (n: Vector1DType | number) => void\n  subtract: (n: Vector1DType | number) => void\n}\n\nexport function Vector1D(initialValue: number): Vector1DType {\n  let value = initialValue\n\n  function get(): number {\n    return value\n  }\n\n  function set(n: Vector1DType | number): void {\n    value = normalizeInput(n)\n  }\n\n  function add(n: Vector1DType | number): void {\n    value += normalizeInput(n)\n  }\n\n  function subtract(n: Vector1DType | number): void {\n    value -= normalizeInput(n)\n  }\n\n  function normalizeInput(n: Vector1DType | number): number {\n    return isNumber(n) ? n : n.get()\n  }\n\n  const self: Vector1DType = {\n    get,\n    set,\n    add,\n    subtract\n  }\n  return self\n}\n","import { AxisType } from './Axis'\n\nexport type TranslateType = {\n  clear: () => void\n  to: (target: number) => void\n  toggleActive: (active: boolean) => void\n}\n\nexport function Translate(\n  axis: AxisType,\n  container: HTMLElement\n): TranslateType {\n  const translate = axis.scroll === 'x' ? x : y\n  const containerStyle = container.style\n  let disabled = false\n\n  function x(n: number): string {\n    return `translate3d(${n}px,0px,0px)`\n  }\n\n  function y(n: number): string {\n    return `translate3d(0px,${n}px,0px)`\n  }\n\n  function to(target: number): void {\n    if (disabled) return\n    containerStyle.transform = translate(axis.direction(target))\n  }\n\n  function toggleActive(active: boolean): void {\n    disabled = !active\n  }\n\n  function clear(): void {\n    if (disabled) return\n    containerStyle.transform = ''\n    if (!container.getAttribute('style')) container.removeAttribute('style')\n  }\n\n  const self: TranslateType = {\n    clear,\n    to,\n    toggleActive\n  }\n  return self\n}\n","import { AxisType } from './Axis'\nimport { arrayKeys } from './utils'\nimport { Vector1D, Vector1DType } from './Vector1d'\nimport { Translate, TranslateType } from './Translate'\n\ntype SlideBoundType = {\n  start: number\n  end: number\n}\n\ntype LoopPointType = {\n  loopPoint: number\n  index: number\n  translate: TranslateType\n  slideLocation: Vector1DType\n  target: () => number\n}\n\nexport type SlideLooperType = {\n  canLoop: () => boolean\n  clear: () => void\n  loop: () => void\n  loopPoints: LoopPointType[]\n}\n\nexport function SlideLooper(\n  axis: AxisType,\n  viewSize: number,\n  contentSize: number,\n  slideSizes: number[],\n  slideSizesWithGaps: number[],\n  snaps: number[],\n  scrollSnaps: number[],\n  offsetLocation: Vector1DType,\n  slides: HTMLElement[]\n): SlideLooperType {\n  const roundingSafety = 0.5\n  const ascItems = arrayKeys(slideSizesWithGaps)\n  const descItems = arrayKeys(slideSizesWithGaps).reverse()\n  const loopPoints = startPoints().concat(endPoints())\n\n  function removeSlideSizes(indexes: number[], from: number): number {\n    return indexes.reduce((a: number, i) => {\n      return a - slideSizesWithGaps[i]\n    }, from)\n  }\n\n  function slidesInGap(indexes: number[], gap: number): number[] {\n    return indexes.reduce((a: number[], i) => {\n      const remainingGap = removeSlideSizes(a, gap)\n      return remainingGap > 0 ? a.concat([i]) : a\n    }, [])\n  }\n\n  function findSlideBounds(offset: number): SlideBoundType[] {\n    return snaps.map((snap, index) => ({\n      start: snap - slideSizes[index] + roundingSafety + offset,\n      end: snap + viewSize - roundingSafety + offset\n    }))\n  }\n\n  function findLoopPoints(\n    indexes: number[],\n    offset: number,\n    isEndEdge: boolean\n  ): LoopPointType[] {\n    const slideBounds = findSlideBounds(offset)\n\n    return indexes.map((index) => {\n      const initial = isEndEdge ? 0 : -contentSize\n      const altered = isEndEdge ? contentSize : 0\n      const boundEdge = isEndEdge ? 'end' : 'start'\n      const loopPoint = slideBounds[index][boundEdge]\n\n      return {\n        index,\n        loopPoint,\n        slideLocation: Vector1D(-1),\n        translate: Translate(axis, slides[index]),\n        target: () => (offsetLocation.get() > loopPoint ? initial : altered)\n      }\n    })\n  }\n\n  function startPoints(): LoopPointType[] {\n    const gap = scrollSnaps[0]\n    const indexes = slidesInGap(descItems, gap)\n    return findLoopPoints(indexes, contentSize, false)\n  }\n\n  function endPoints(): LoopPointType[] {\n    const gap = viewSize - scrollSnaps[0] - 1\n    const indexes = slidesInGap(ascItems, gap)\n    return findLoopPoints(indexes, -contentSize, true)\n  }\n\n  function canLoop(): boolean {\n    return loopPoints.every(({ index }) => {\n      const otherIndexes = ascItems.filter((i) => i !== index)\n      return removeSlideSizes(otherIndexes, viewSize) <= 0.1\n    })\n  }\n\n  function loop(): void {\n    loopPoints.forEach((loopPoint) => {\n      const { target, translate, slideLocation } = loopPoint\n      const shiftLocation = target()\n      if (shiftLocation === slideLocation.get()) return\n      translate.to(shiftLocation)\n      slideLocation.set(shiftLocation)\n    })\n  }\n\n  function clear(): void {\n    loopPoints.forEach((loopPoint) => loopPoint.translate.clear())\n  }\n\n  const self: SlideLooperType = {\n    canLoop,\n    clear,\n    loop,\n    loopPoints\n  }\n  return self\n}\n","import { EmblaCarouselType } from './EmblaCarousel'\nimport { EventHandlerType } from './EventHandler'\nimport { isBoolean } from './utils'\n\ntype SlidesHandlerCallbackType = (\n  emblaApi: EmblaCarouselType,\n  mutations: MutationRecord[]\n) => boolean | void\n\nexport type SlidesHandlerOptionType = boolean | SlidesHandlerCallbackType\n\nexport type SlidesHandlerType = {\n  init: (emblaApi: EmblaCarouselType) => void\n  destroy: () => void\n}\n\nexport function SlidesHandler(\n  container: HTMLElement,\n  eventHandler: EventHandlerType,\n  watchSlides: SlidesHandlerOptionType\n): SlidesHandlerType {\n  let mutationObserver: MutationObserver\n  let destroyed = false\n\n  function init(emblaApi: EmblaCarouselType): void {\n    if (!watchSlides) return\n\n    function defaultCallback(mutations: MutationRecord[]): void {\n      for (const mutation of mutations) {\n        if (mutation.type === 'childList') {\n          emblaApi.reInit()\n          eventHandler.emit('slidesChanged')\n          break\n        }\n      }\n    }\n\n    mutationObserver = new MutationObserver((mutations) => {\n      if (destroyed) return\n      if (isBoolean(watchSlides) || watchSlides(emblaApi, mutations)) {\n        defaultCallback(mutations)\n      }\n    })\n\n    mutationObserver.observe(container, { childList: true })\n  }\n\n  function destroy(): void {\n    if (mutationObserver) mutationObserver.disconnect()\n    destroyed = true\n  }\n\n  const self: SlidesHandlerType = {\n    init,\n    destroy\n  }\n  return self\n}\n","import { EventHandlerType } from './EventHandler'\nimport { objectKeys } from './utils'\n\ntype IntersectionEntryMapType = {\n  [key: number]: IntersectionObserverEntry\n}\n\nexport type SlidesInViewOptionsType = IntersectionObserverInit['threshold']\n\nexport type SlidesInViewType = {\n  init: () => void\n  destroy: () => void\n  get: (inView?: boolean) => number[]\n}\n\nexport function SlidesInView(\n  container: HTMLElement,\n  slides: HTMLElement[],\n  eventHandler: EventHandlerType,\n  threshold: SlidesInViewOptionsType\n): SlidesInViewType {\n  const intersectionEntryMap: IntersectionEntryMapType = {}\n  let inViewCache: number[] | null = null\n  let notInViewCache: number[] | null = null\n  let intersectionObserver: IntersectionObserver\n  let destroyed = false\n\n  function init(): void {\n    intersectionObserver = new IntersectionObserver(\n      (entries) => {\n        if (destroyed) return\n\n        entries.forEach((entry) => {\n          const index = slides.indexOf(<HTMLElement>entry.target)\n          intersectionEntryMap[index] = entry\n        })\n\n        inViewCache = null\n        notInViewCache = null\n        eventHandler.emit('slidesInView')\n      },\n      {\n        root: container.parentElement,\n        threshold\n      }\n    )\n\n    slides.forEach((slide) => intersectionObserver.observe(slide))\n  }\n\n  function destroy(): void {\n    if (intersectionObserver) intersectionObserver.disconnect()\n    destroyed = true\n  }\n\n  function createInViewList(inView: boolean): number[] {\n    return objectKeys(intersectionEntryMap).reduce(\n      (list: number[], slideIndex) => {\n        const index = parseInt(slideIndex)\n        const { isIntersecting } = intersectionEntryMap[index]\n        const inViewMatch = inView && isIntersecting\n        const notInViewMatch = !inView && !isIntersecting\n\n        if (inViewMatch || notInViewMatch) list.push(index)\n        return list\n      },\n      []\n    )\n  }\n\n  function get(inView: boolean = true): number[] {\n    if (inView && inViewCache) return inViewCache\n    if (!inView && notInViewCache) return notInViewCache\n\n    const slideIndexes = createInViewList(inView)\n\n    if (inView) inViewCache = slideIndexes\n    if (!inView) notInViewCache = slideIndexes\n\n    return slideIndexes\n  }\n\n  const self: SlidesInViewType = {\n    init,\n    destroy,\n    get\n  }\n\n  return self\n}\n","import { AxisType } from './Axis'\nimport { NodeRectType } from './NodeRects'\nimport {\n  arrayKeys,\n  arrayLast,\n  arrayLastIndex,\n  isNumber,\n  mathAbs\n} from './utils'\n\nexport type SlidesToScrollOptionType = 'auto' | number\n\nexport type SlidesToScrollType = {\n  groupSlides: <Type>(array: Type[]) => Type[][]\n}\n\nexport function SlidesToScroll(\n  axis: AxisType,\n  viewSize: number,\n  slidesToScroll: SlidesToScrollOptionType,\n  loop: boolean,\n  containerRect: NodeRectType,\n  slideRects: NodeRectType[],\n  startGap: number,\n  endGap: number,\n  pixelTolerance: number\n): SlidesToScrollType {\n  const { startEdge, endEdge, direction } = axis\n  const groupByNumber = isNumber(slidesToScroll)\n\n  function byNumber<Type>(array: Type[], groupSize: number): Type[][] {\n    return arrayKeys(array)\n      .filter((i) => i % groupSize === 0)\n      .map((i) => array.slice(i, i + groupSize))\n  }\n\n  function bySize<Type>(array: Type[]): Type[][] {\n    if (!array.length) return []\n\n    return arrayKeys(array)\n      .reduce((groups: number[], rectB, index) => {\n        const rectA = arrayLast(groups) || 0\n        const isFirst = rectA === 0\n        const isLast = rectB === arrayLastIndex(array)\n\n        const edgeA = containerRect[startEdge] - slideRects[rectA][startEdge]\n        const edgeB = containerRect[startEdge] - slideRects[rectB][endEdge]\n        const gapA = !loop && isFirst ? direction(startGap) : 0\n        const gapB = !loop && isLast ? direction(endGap) : 0\n        const chunkSize = mathAbs(edgeB - gapB - (edgeA + gapA))\n\n        if (index && chunkSize > viewSize + pixelTolerance) groups.push(rectB)\n        if (isLast) groups.push(array.length)\n        return groups\n      }, [])\n      .map((currentSize, index, groups) => {\n        const previousSize = Math.max(groups[index - 1] || 0)\n        return array.slice(previousSize, currentSize)\n      })\n  }\n\n  function groupSlides<Type>(array: Type[]): Type[][] {\n    return groupByNumber ? byNumber(array, slidesToScroll) : bySize(array)\n  }\n\n  const self: SlidesToScrollType = {\n    groupSlides\n  }\n  return self\n}\n","import { Alignment } from './Alignment'\nimport {\n  Animations,\n  AnimationsType,\n  AnimationsUpdateType,\n  AnimationsRenderType\n} from './Animations'\nimport { Axis, AxisType } from './Axis'\nimport { Counter, CounterType } from './Counter'\nimport { DragHandler, DragHandlerType } from './DragHandler'\nimport { DragTracker } from './DragTracker'\nimport { EventHandlerType } from './EventHandler'\nimport { EventStore, EventStoreType } from './EventStore'\nimport { LimitType } from './Limit'\nimport { NodeRectType, NodeRects } from './NodeRects'\nimport { OptionsType } from './Options'\nimport { PercentOfView, PercentOfViewType } from './PercentOfView'\nimport { ResizeHandler, ResizeHandlerType } from './ResizeHandler'\nimport { ScrollBody, ScrollBodyType } from './ScrollBody'\nimport { ScrollBounds, ScrollBoundsType } from './ScrollBounds'\nimport { ScrollContain } from './ScrollContain'\nimport { ScrollLimit } from './ScrollLimit'\nimport { ScrollLooper, ScrollLooperType } from './ScrollLooper'\nimport { ScrollProgress, ScrollProgressType } from './ScrollProgress'\nimport { ScrollSnaps } from './ScrollSnaps'\nimport { SlideRegistry, SlideRegistryType } from './SlideRegistry'\nimport { ScrollTarget, ScrollTargetType } from './ScrollTarget'\nimport { ScrollTo, ScrollToType } from './ScrollTo'\nimport { SlideFocus, SlideFocusType } from './SlideFocus'\nimport { SlideLooper, SlideLooperType } from './SlideLooper'\nimport { SlidesHandler, SlidesHandlerType } from './SlidesHandler'\nimport { SlidesInView, SlidesInViewType } from './SlidesInView'\nimport { SlideSizes } from './SlideSizes'\nimport { SlidesToScroll, SlidesToScrollType } from './SlidesToScroll'\nimport { Translate, TranslateType } from './Translate'\nimport { arrayKeys, arrayLast, arrayLastIndex, WindowType } from './utils'\nimport { Vector1D, Vector1DType } from './Vector1d'\n\nexport type EngineType = {\n  ownerDocument: Document\n  ownerWindow: WindowType\n  eventHandler: EventHandlerType\n  axis: AxisType\n  animation: AnimationsType\n  scrollBounds: ScrollBoundsType\n  scrollLooper: ScrollLooperType\n  scrollProgress: ScrollProgressType\n  index: CounterType\n  indexPrevious: CounterType\n  limit: LimitType\n  location: Vector1DType\n  offsetLocation: Vector1DType\n  options: OptionsType\n  percentOfView: PercentOfViewType\n  scrollBody: ScrollBodyType\n  dragHandler: DragHandlerType\n  eventStore: EventStoreType\n  slideLooper: SlideLooperType\n  slidesInView: SlidesInViewType\n  slidesToScroll: SlidesToScrollType\n  target: Vector1DType\n  translate: TranslateType\n  resizeHandler: ResizeHandlerType\n  slidesHandler: SlidesHandlerType\n  scrollTo: ScrollToType\n  scrollTarget: ScrollTargetType\n  scrollSnapList: number[]\n  scrollSnaps: number[]\n  slideIndexes: number[]\n  slideFocus: SlideFocusType\n  slideRegistry: SlideRegistryType['slideRegistry']\n  containerRect: NodeRectType\n  slideRects: NodeRectType[]\n}\n\nexport function Engine(\n  root: HTMLElement,\n  container: HTMLElement,\n  slides: HTMLElement[],\n  ownerDocument: Document,\n  ownerWindow: WindowType,\n  options: OptionsType,\n  eventHandler: EventHandlerType\n): EngineType {\n  // Options\n  const {\n    align,\n    axis: scrollAxis,\n    direction,\n    startIndex,\n    loop,\n    duration,\n    dragFree,\n    dragThreshold,\n    inViewThreshold,\n    slidesToScroll: groupSlides,\n    skipSnaps,\n    containScroll,\n    watchResize,\n    watchSlides,\n    watchDrag\n  } = options\n\n  // Measurements\n  const pixelTolerance = 2\n  const nodeRects = NodeRects()\n  const containerRect = nodeRects.measure(container)\n  const slideRects = slides.map(nodeRects.measure)\n  const axis = Axis(scrollAxis, direction)\n  const viewSize = axis.measureSize(containerRect)\n  const percentOfView = PercentOfView(viewSize)\n  const alignment = Alignment(align, viewSize)\n  const containSnaps = !loop && !!containScroll\n  const readEdgeGap = loop || !!containScroll\n  const { slideSizes, slideSizesWithGaps, startGap, endGap } = SlideSizes(\n    axis,\n    containerRect,\n    slideRects,\n    slides,\n    readEdgeGap,\n    ownerWindow\n  )\n  const slidesToScroll = SlidesToScroll(\n    axis,\n    viewSize,\n    groupSlides,\n    loop,\n    containerRect,\n    slideRects,\n    startGap,\n    endGap,\n    pixelTolerance\n  )\n  const { snaps, snapsAligned } = ScrollSnaps(\n    axis,\n    alignment,\n    containerRect,\n    slideRects,\n    slidesToScroll\n  )\n  const contentSize = -arrayLast(snaps) + arrayLast(slideSizesWithGaps)\n  const { snapsContained, scrollContainLimit } = ScrollContain(\n    viewSize,\n    contentSize,\n    snapsAligned,\n    containScroll,\n    pixelTolerance\n  )\n  const scrollSnaps = containSnaps ? snapsContained : snapsAligned\n  const { limit } = ScrollLimit(contentSize, scrollSnaps, loop)\n\n  // Indexes\n  const index = Counter(arrayLastIndex(scrollSnaps), startIndex, loop)\n  const indexPrevious = index.clone()\n  const slideIndexes = arrayKeys(slides)\n\n  // Animation\n  const update: AnimationsUpdateType = ({\n    dragHandler,\n    scrollBody,\n    scrollBounds,\n    options: { loop }\n  }) => {\n    if (!loop) scrollBounds.constrain(dragHandler.pointerDown())\n    scrollBody.seek()\n  }\n\n  const render: AnimationsRenderType = (\n    {\n      scrollBody,\n      translate,\n      location,\n      offsetLocation,\n      scrollLooper,\n      slideLooper,\n      dragHandler,\n      animation,\n      eventHandler,\n      options: { loop }\n    },\n    lagOffset\n  ) => {\n    const velocity = scrollBody.velocity()\n    const hasSettled = scrollBody.settled()\n\n    if (hasSettled && !dragHandler.pointerDown()) {\n      animation.stop()\n      eventHandler.emit('settle')\n    }\n    if (!hasSettled) eventHandler.emit('scroll')\n\n    offsetLocation.set(location.get() - velocity + velocity * lagOffset)\n\n    if (loop) {\n      scrollLooper.loop(scrollBody.direction())\n      slideLooper.loop()\n    }\n\n    translate.to(offsetLocation.get())\n  }\n  const animation = Animations(\n    ownerDocument,\n    ownerWindow,\n    () => update(engine),\n    (lagOffset: number) => render(engine, lagOffset)\n  )\n\n  // Shared\n  const friction = 0.68\n  const startLocation = scrollSnaps[index.get()]\n  const location = Vector1D(startLocation)\n  const offsetLocation = Vector1D(startLocation)\n  const target = Vector1D(startLocation)\n  const scrollBody = ScrollBody(\n    location,\n    offsetLocation,\n    target,\n    duration,\n    friction\n  )\n  const scrollTarget = ScrollTarget(\n    loop,\n    scrollSnaps,\n    contentSize,\n    limit,\n    target\n  )\n  const scrollTo = ScrollTo(\n    animation,\n    index,\n    indexPrevious,\n    scrollBody,\n    scrollTarget,\n    target,\n    eventHandler\n  )\n  const scrollProgress = ScrollProgress(limit)\n  const eventStore = EventStore()\n  const slidesInView = SlidesInView(\n    container,\n    slides,\n    eventHandler,\n    inViewThreshold\n  )\n  const { slideRegistry } = SlideRegistry(\n    containSnaps,\n    containScroll,\n    scrollSnaps,\n    scrollContainLimit,\n    slidesToScroll,\n    slideIndexes\n  )\n  const slideFocus = SlideFocus(\n    root,\n    slides,\n    slideRegistry,\n    scrollTo,\n    scrollBody,\n    eventStore\n  )\n\n  // Engine\n  const engine: EngineType = {\n    ownerDocument,\n    ownerWindow,\n    eventHandler,\n    containerRect,\n    slideRects,\n    animation,\n    axis,\n    dragHandler: DragHandler(\n      axis,\n      root,\n      ownerDocument,\n      ownerWindow,\n      target,\n      DragTracker(axis, ownerWindow),\n      location,\n      animation,\n      scrollTo,\n      scrollBody,\n      scrollTarget,\n      index,\n      eventHandler,\n      percentOfView,\n      dragFree,\n      dragThreshold,\n      skipSnaps,\n      friction,\n      watchDrag\n    ),\n    eventStore,\n    percentOfView,\n    index,\n    indexPrevious,\n    limit,\n    location,\n    offsetLocation,\n    options,\n    resizeHandler: ResizeHandler(\n      container,\n      eventHandler,\n      ownerWindow,\n      slides,\n      axis,\n      watchResize,\n      nodeRects\n    ),\n    scrollBody,\n    scrollBounds: ScrollBounds(\n      limit,\n      offsetLocation,\n      target,\n      scrollBody,\n      percentOfView\n    ),\n    scrollLooper: ScrollLooper(contentSize, limit, offsetLocation, [\n      location,\n      offsetLocation,\n      target\n    ]),\n    scrollProgress,\n    scrollSnapList: scrollSnaps.map(scrollProgress.get),\n    scrollSnaps,\n    scrollTarget,\n    scrollTo,\n    slideLooper: SlideLooper(\n      axis,\n      viewSize,\n      contentSize,\n      slideSizes,\n      slideSizesWithGaps,\n      snaps,\n      scrollSnaps,\n      offsetLocation,\n      slides\n    ),\n    slideFocus,\n    slidesHandler: SlidesHandler(container, eventHandler, watchSlides),\n    slidesInView,\n    slideIndexes,\n    slideRegistry,\n    slidesToScroll,\n    target,\n    translate: Translate(axis, container)\n  }\n\n  return engine\n}\n","export type NodeRectType = {\n  top: number\n  right: number\n  bottom: number\n  left: number\n  width: number\n  height: number\n}\n\nexport type NodeRectsType = {\n  measure: (node: HTMLElement) => NodeRectType\n}\n\nexport function NodeRects(): NodeRectsType {\n  function measure(node: HTMLElement): NodeRectType {\n    const { offsetTop, offsetLeft, offsetWidth, offsetHeight } = node\n    const offset: NodeRectType = {\n      top: offsetTop,\n      right: offsetLeft + offsetWidth,\n      bottom: offsetTop + offsetHeight,\n      left: offsetLeft,\n      width: offsetWidth,\n      height: offsetHeight\n    }\n\n    return offset\n  }\n\n  const self: NodeRectsType = {\n    measure\n  }\n  return self\n}\n","import { NodeRectType } from './NodeRects'\n\nexport type AxisOptionType = 'x' | 'y'\nexport type AxisDirectionOptionType = 'ltr' | 'rtl'\ntype AxisEdgeType = 'top' | 'right' | 'bottom' | 'left'\n\nexport type AxisType = {\n  scroll: AxisOptionType\n  cross: AxisOptionType\n  startEdge: AxisEdgeType\n  endEdge: AxisEdgeType\n  measureSize: (nodeRect: NodeRectType) => number\n  direction: (n: number) => number\n}\n\nexport function Axis(\n  axis: AxisOptionType,\n  contentDirection: AxisDirectionOptionType\n): AxisType {\n  const isRightToLeft = contentDirection === 'rtl'\n  const isVertical = axis === 'y'\n  const scroll = isVertical ? 'y' : 'x'\n  const cross = isVertical ? 'x' : 'y'\n  const sign = !isVertical && isRightToLeft ? -1 : 1\n  const startEdge = getStartEdge()\n  const endEdge = getEndEdge()\n\n  function measureSize(nodeRect: NodeRectType): number {\n    const { height, width } = nodeRect\n    return isVertical ? height : width\n  }\n\n  function getStartEdge(): AxisEdgeType {\n    if (isVertical) return 'top'\n    return isRightToLeft ? 'right' : 'left'\n  }\n\n  function getEndEdge(): AxisEdgeType {\n    if (isVertical) return 'bottom'\n    return isRightToLeft ? 'left' : 'right'\n  }\n\n  function direction(n: number): number {\n    return n * sign\n  }\n\n  const self: AxisType = {\n    scroll,\n    cross,\n    startEdge,\n    endEdge,\n    measureSize,\n    direction\n  }\n  return self\n}\n","export type PercentOfViewType = {\n  measure: (n: number) => number\n}\n\nexport function PercentOfView(viewSize: number): PercentOfViewType {\n  function measure(n: number): number {\n    return viewSize * (n / 100)\n  }\n\n  const self: PercentOfViewType = {\n    measure\n  }\n  return self\n}\n","import { isString } from './utils'\n\nexport type AlignmentOptionType =\n  | 'start'\n  | 'center'\n  | 'end'\n  | ((viewSize: number, snapSize: number, index: number) => number)\n\nexport type AlignmentType = {\n  measure: (n: number, index: number) => number\n}\n\nexport function Alignment(\n  align: AlignmentOptionType,\n  viewSize: number\n): AlignmentType {\n  const predefined = { start, center, end }\n\n  function start(): number {\n    return 0\n  }\n\n  function center(n: number): number {\n    return end(n) / 2\n  }\n\n  function end(n: number): number {\n    return viewSize - n\n  }\n\n  function measure(n: number, index: number): number {\n    if (isString(align)) return predefined[align](n)\n    return align(viewSize, n, index)\n  }\n\n  const self: AlignmentType = {\n    measure\n  }\n  return self\n}\n","import { AxisType } from './Axis'\nimport { NodeRectType } from './NodeRects'\nimport { arrayIsLastIndex, arrayLast, mathAbs, WindowType } from './utils'\n\nexport type SlideSizesType = {\n  slideSizes: number[]\n  slideSizesWithGaps: number[]\n  startGap: number\n  endGap: number\n}\n\nexport function SlideSizes(\n  axis: AxisType,\n  containerRect: NodeRectType,\n  slideRects: NodeRectType[],\n  slides: HTMLElement[],\n  readEdgeGap: boolean,\n  ownerWindow: WindowType\n): SlideSizesType {\n  const { measureSize, startEdge, endEdge } = axis\n  const withEdgeGap = slideRects[0] && readEdgeGap\n  const startGap = measureStartGap()\n  const endGap = measureEndGap()\n  const slideSizes = slideRects.map(measureSize)\n  const slideSizesWithGaps = measureWithGaps()\n\n  function measureStartGap(): number {\n    if (!withEdgeGap) return 0\n    const slideRect = slideRects[0]\n    return mathAbs(containerRect[startEdge] - slideRect[startEdge])\n  }\n\n  function measureEndGap(): number {\n    if (!withEdgeGap) return 0\n    const style = ownerWindow.getComputedStyle(arrayLast(slides))\n    return parseFloat(style.getPropertyValue(`margin-${endEdge}`))\n  }\n\n  function measureWithGaps(): number[] {\n    return slideRects\n      .map((rect, index, rects) => {\n        const isFirst = !index\n        const isLast = arrayIsLastIndex(rects, index)\n        if (isFirst) return slideSizes[index] + startGap\n        if (isLast) return slideSizes[index] + endGap\n        return rects[index + 1][startEdge] - rect[startEdge]\n      })\n      .map(mathAbs)\n  }\n\n  const self: SlideSizesType = {\n    slideSizes,\n    slideSizesWithGaps,\n    startGap,\n    endGap\n  }\n  return self\n}\n","import { AlignmentType } from './Alignment'\nimport { AxisType } from './Axis'\nimport { NodeRectType } from './NodeRects'\nimport { SlidesToScrollType } from './SlidesToScroll'\nimport { arrayLast, mathAbs } from './utils'\n\nexport type ScrollSnapsType = {\n  snaps: number[]\n  snapsAligned: number[]\n}\n\nexport function ScrollSnaps(\n  axis: AxisType,\n  alignment: AlignmentType,\n  containerRect: NodeRectType,\n  slideRects: NodeRectType[],\n  slidesToScroll: SlidesToScrollType\n): ScrollSnapsType {\n  const { startEdge, endEdge } = axis\n  const { groupSlides } = slidesToScroll\n  const alignments = measureSizes().map(alignment.measure)\n  const snaps = measureUnaligned()\n  const snapsAligned = measureAligned()\n\n  function measureSizes(): number[] {\n    return groupSlides(slideRects)\n      .map((rects) => arrayLast(rects)[endEdge] - rects[0][startEdge])\n      .map(mathAbs)\n  }\n\n  function measureUnaligned(): number[] {\n    return slideRects\n      .map((rect) => containerRect[startEdge] - rect[startEdge])\n      .map((snap) => -mathAbs(snap))\n  }\n\n  function measureAligned(): number[] {\n    return groupSlides(snaps)\n      .map((g) => g[0])\n      .map((snap, index) => snap + alignments[index])\n  }\n\n  const self: ScrollSnapsType = {\n    snaps,\n    snapsAligned\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\nimport { arrayIsLastIndex, arrayLast, deltaAbs } from './utils'\n\nexport type ScrollContainOptionType = false | 'trimSnaps' | 'keepSnaps'\n\nexport type ScrollContainType = {\n  snapsContained: number[]\n  scrollContainLimit: LimitType\n}\n\nexport function ScrollContain(\n  viewSize: number,\n  contentSize: number,\n  snapsAligned: number[],\n  containScroll: ScrollContainOptionType,\n  pixelTolerance: number\n): ScrollContainType {\n  const scrollBounds = Limit(-contentSize + viewSize, 0)\n  const snapsBounded = measureBounded()\n  const scrollContainLimit = findScrollContainLimit()\n  const snapsContained = measureContained()\n\n  function usePixelTolerance(bound: number, snap: number): boolean {\n    return deltaAbs(bound, snap) < 1\n  }\n\n  function findScrollContainLimit(): LimitType {\n    const startSnap = snapsBounded[0]\n    const endSnap = arrayLast(snapsBounded)\n    const min = snapsBounded.lastIndexOf(startSnap)\n    const max = snapsBounded.indexOf(endSnap) + 1\n    return Limit(min, max)\n  }\n\n  function measureBounded(): number[] {\n    return snapsAligned\n      .map((snapAligned, index) => {\n        const { min, max } = scrollBounds\n        const snap = scrollBounds.constrain(snapAligned)\n        const isFirst = !index\n        const isLast = arrayIsLastIndex(snapsAligned, index)\n        if (isFirst) return max\n        if (isLast) return min\n        if (usePixelTolerance(min, snap)) return min\n        if (usePixelTolerance(max, snap)) return max\n        return snap\n      })\n      .map((scrollBound) => parseFloat(scrollBound.toFixed(3)))\n  }\n\n  function measureContained(): number[] {\n    if (contentSize <= viewSize + pixelTolerance) return [scrollBounds.max]\n    if (containScroll === 'keepSnaps') return snapsBounded\n    const { min, max } = scrollContainLimit\n    return snapsBounded.slice(min, max)\n  }\n\n  const self: ScrollContainType = {\n    snapsContained,\n    scrollContainLimit\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\nimport { arrayLast } from './utils'\n\nexport type ScrollLimitType = {\n  limit: LimitType\n}\n\nexport function ScrollLimit(\n  contentSize: number,\n  scrollSnaps: number[],\n  loop: boolean\n): ScrollLimitType {\n  const max = scrollSnaps[0]\n  const min = loop ? max - contentSize : arrayLast(scrollSnaps)\n  const limit = Limit(min, max)\n\n  const self: ScrollLimitType = {\n    limit\n  }\n  return self\n}\n","import { mathSign, mathAbs } from './utils'\nimport { Vector1DType } from './Vector1d'\n\nexport type ScrollBodyType = {\n  direction: () => number\n  duration: () => number\n  velocity: () => number\n  seek: () => ScrollBodyType\n  settled: () => boolean\n  useBaseFriction: () => ScrollBodyType\n  useBaseDuration: () => ScrollBodyType\n  useFriction: (n: number) => ScrollBodyType\n  useDuration: (n: number) => ScrollBodyType\n}\n\nexport function ScrollBody(\n  location: Vector1DType,\n  offsetLocation: Vector1DType,\n  target: Vector1DType,\n  baseDuration: number,\n  baseFriction: number\n): ScrollBodyType {\n  let bodyVelocity = 0\n  let scrollDirection = 0\n  let scrollDuration = baseDuration\n  let scrollFriction = baseFriction\n  let rawLocation = location.get()\n  let rawLocationPrevious = 0\n\n  function seek(): ScrollBodyType {\n    const diff = target.get() - location.get()\n    const isInstant = !scrollDuration\n    let directionDiff = 0\n\n    if (isInstant) {\n      bodyVelocity = 0\n      location.set(target)\n\n      directionDiff = diff\n    } else {\n      bodyVelocity += diff / scrollDuration\n      bodyVelocity *= scrollFriction\n      rawLocation += bodyVelocity\n      location.add(bodyVelocity)\n\n      directionDiff = rawLocation - rawLocationPrevious\n    }\n\n    scrollDirection = mathSign(directionDiff)\n    rawLocationPrevious = rawLocation\n    return self\n  }\n\n  function settled(): boolean {\n    const diff = target.get() - offsetLocation.get()\n    return mathAbs(diff) < 0.001\n  }\n\n  function duration(): number {\n    return scrollDuration\n  }\n\n  function direction(): number {\n    return scrollDirection\n  }\n\n  function velocity(): number {\n    return bodyVelocity\n  }\n\n  function useBaseDuration(): ScrollBodyType {\n    return useDuration(baseDuration)\n  }\n\n  function useBaseFriction(): ScrollBodyType {\n    return useFriction(baseFriction)\n  }\n\n  function useDuration(n: number): ScrollBodyType {\n    scrollDuration = n\n    return self\n  }\n\n  function useFriction(n: number): ScrollBodyType {\n    scrollFriction = n\n    return self\n  }\n\n  const self: ScrollBodyType = {\n    direction,\n    duration,\n    velocity,\n    seek,\n    settled,\n    useBaseFriction,\n    useBaseDuration,\n    useFriction,\n    useDuration\n  }\n  return self\n}\n","import { AnimationsType } from './Animations'\nimport { CounterType } from './Counter'\nimport { EventHandlerType } from './EventHandler'\nimport { ScrollBodyType } from './ScrollBody'\nimport { ScrollTargetType, TargetType } from './ScrollTarget'\nimport { Vector1DType } from './Vector1d'\n\nexport type ScrollToType = {\n  distance: (n: number, snap: boolean) => void\n  index: (n: number, direction: number) => void\n}\n\nexport function ScrollTo(\n  animation: AnimationsType,\n  indexCurrent: CounterType,\n  indexPrevious: CounterType,\n  scrollBody: ScrollBodyType,\n  scrollTarget: ScrollTargetType,\n  targetVector: Vector1DType,\n  eventHandler: EventHandlerType\n): ScrollToType {\n  function scrollTo(target: TargetType): void {\n    const distanceDiff = target.distance\n    const indexDiff = target.index !== indexCurrent.get()\n\n    targetVector.add(distanceDiff)\n\n    if (distanceDiff) {\n      if (scrollBody.duration()) {\n        animation.start()\n      } else {\n        animation.update()\n        animation.render(1)\n        animation.update()\n      }\n    }\n\n    if (indexDiff) {\n      indexPrevious.set(indexCurrent.get())\n      indexCurrent.set(target.index)\n      eventHandler.emit('select')\n    }\n  }\n\n  function distance(n: number, snap: boolean): void {\n    const target = scrollTarget.byDistance(n, snap)\n    scrollTo(target)\n  }\n\n  function index(n: number, direction: number): void {\n    const targetIndex = indexCurrent.clone().set(n)\n    const target = scrollTarget.byIndex(targetIndex.get(), direction)\n    scrollTo(target)\n  }\n\n  const self: ScrollToType = {\n    distance,\n    index\n  }\n  return self\n}\n","import { LimitType } from './Limit'\n\nexport type ScrollProgressType = {\n  get: (n: number) => number\n}\n\nexport function ScrollProgress(limit: LimitType): ScrollProgressType {\n  const { max, length } = limit\n\n  function get(n: number): number {\n    const currentLocation = n - max\n    return length ? currentLocation / -length : 0\n  }\n\n  const self: ScrollProgressType = {\n    get\n  }\n  return self\n}\n","import { LimitType } from './Limit'\nimport { ScrollContainOptionType } from './ScrollContain'\nimport { SlidesToScrollType } from './SlidesToScroll'\nimport {\n  arrayFromNumber,\n  arrayIsLastIndex,\n  arrayLast,\n  arrayLastIndex\n} from './utils'\n\nexport type SlideRegistryType = {\n  slideRegistry: number[][]\n}\n\nexport function SlideRegistry(\n  containSnaps: boolean,\n  containScroll: ScrollContainOptionType,\n  scrollSnaps: number[],\n  scrollContainLimit: LimitType,\n  slidesToScroll: SlidesToScrollType,\n  slideIndexes: number[]\n): SlideRegistryType {\n  const { groupSlides } = slidesToScroll\n  const { min, max } = scrollContainLimit\n  const slideRegistry = createSlideRegistry()\n\n  function createSlideRegistry(): number[][] {\n    const groupedSlideIndexes = groupSlides(slideIndexes)\n    const doNotContain = !containSnaps || containScroll === 'keepSnaps'\n\n    if (scrollSnaps.length === 1) return [slideIndexes]\n    if (doNotContain) return groupedSlideIndexes\n\n    return groupedSlideIndexes.slice(min, max).map((group, index, groups) => {\n      const isFirst = !index\n      const isLast = arrayIsLastIndex(groups, index)\n\n      if (isFirst) {\n        const range = arrayLast(groups[0]) + 1\n        return arrayFromNumber(range)\n      }\n      if (isLast) {\n        const range = arrayLastIndex(slideIndexes) - arrayLast(groups)[0] + 1\n        return arrayFromNumber(range, arrayLast(groups)[0])\n      }\n      return group\n    })\n  }\n\n  const self: SlideRegistryType = {\n    slideRegistry\n  }\n  return self\n}\n","import { EventStoreType } from './EventStore'\nimport { ScrollBodyType } from './ScrollBody'\nimport { ScrollToType } from './ScrollTo'\nimport { SlideRegistryType } from './SlideRegistry'\nimport { isNumber } from './utils'\n\nexport type SlideFocusType = {\n  init: () => void\n}\n\nexport function SlideFocus(\n  root: HTMLElement,\n  slides: HTMLElement[],\n  slideRegistry: SlideRegistryType['slideRegistry'],\n  scrollTo: ScrollToType,\n  scrollBody: ScrollBodyType,\n  eventStore: EventStoreType\n): SlideFocusType {\n  let lastTabPressTime = 0\n\n  function init(): void {\n    eventStore.add(document, 'keydown', registerTabPress, false)\n    slides.forEach(addSlideFocusEvent)\n  }\n\n  function registerTabPress(event: KeyboardEvent): void {\n    if (event.code === 'Tab') lastTabPressTime = new Date().getTime()\n  }\n\n  function addSlideFocusEvent(slide: HTMLElement): void {\n    const focus = (): void => {\n      const nowTime = new Date().getTime()\n      const diffTime = nowTime - lastTabPressTime\n\n      if (diffTime > 10) return\n\n      root.scrollLeft = 0\n      const index = slides.indexOf(slide)\n      const group = slideRegistry.findIndex((group) => group.includes(index))\n\n      if (!isNumber(group)) return\n\n      scrollBody.useDuration(0)\n      scrollTo.index(group, 0)\n    }\n\n    eventStore.add(slide, 'focus', focus, {\n      passive: true,\n      capture: true\n    })\n  }\n\n  const self: SlideFocusType = {\n    init\n  }\n  return self\n}\n","import { AlignmentOptionType } from './Alignment'\nimport { AxisDirectionOptionType, AxisOptionType } from './Axis'\nimport { SlidesToScrollOptionType } from './SlidesToScroll'\nimport { ScrollContainOptionType } from './ScrollContain'\nimport { DragHandlerOptionType } from './DragHandler'\nimport { ResizeHandlerOptionType } from './ResizeHandler'\nimport { SlidesHandlerOptionType } from './SlidesHandler'\nimport { SlidesInViewOptionsType } from './SlidesInView'\n\nexport type LooseOptionsType = {\n  [key: string]: unknown\n}\n\nexport type CreateOptionsType<Type extends LooseOptionsType> = Type & {\n  active: boolean\n  breakpoints: {\n    [key: string]: Omit<Partial<CreateOptionsType<Type>>, 'breakpoints'>\n  }\n}\n\nexport type OptionsType = CreateOptionsType<{\n  align: AlignmentOptionType\n  axis: AxisOptionType\n  container: string | HTMLElement | null\n  slides: string | HTMLElement[] | NodeListOf<HTMLElement> | null\n  containScroll: ScrollContainOptionType\n  direction: AxisDirectionOptionType\n  slidesToScroll: SlidesToScrollOptionType\n  dragFree: boolean\n  dragThreshold: number\n  inViewThreshold: SlidesInViewOptionsType\n  loop: boolean\n  skipSnaps: boolean\n  duration: number\n  startIndex: number\n  watchDrag: DragHandlerOptionType\n  watchResize: ResizeHandlerOptionType\n  watchSlides: SlidesHandlerOptionType\n}>\n\nexport const defaultOptions: OptionsType = {\n  align: 'center',\n  axis: 'x',\n  container: null,\n  slides: null,\n  containScroll: 'trimSnaps',\n  direction: 'ltr',\n  slidesToScroll: 1,\n  inViewThreshold: 0,\n  breakpoints: {},\n  dragFree: false,\n  dragThreshold: 10,\n  loop: false,\n  skipSnaps: false,\n  duration: 25,\n  startIndex: 0,\n  active: true,\n  watchDrag: true,\n  watchResize: true,\n  watchSlides: true\n}\n\nexport type EmblaOptionsType = Partial<OptionsType>\n","import { LooseOptionsType, CreateOptionsType } from './Options'\nimport { objectKeys, objectsMergeDeep, WindowType } from './utils'\n\ntype OptionsType = Partial<CreateOptionsType<LooseOptionsType>>\n\nexport type OptionsHandlerType = {\n  mergeOptions: <TypeA extends OptionsType, TypeB extends OptionsType>(\n    optionsA: TypeA,\n    optionsB?: TypeB\n  ) => TypeA\n  optionsAtMedia: <Type extends OptionsType>(options: Type) => Type\n  optionsMediaQueries: (optionsList: OptionsType[]) => MediaQueryList[]\n}\n\nexport function OptionsHandler(ownerWindow: WindowType): OptionsHandlerType {\n  function mergeOptions<TypeA extends OptionsType, TypeB extends OptionsType>(\n    optionsA: TypeA,\n    optionsB?: TypeB\n  ): TypeA {\n    return <TypeA>objectsMergeDeep(optionsA, optionsB || {})\n  }\n\n  function optionsAtMedia<Type extends OptionsType>(options: Type): Type {\n    const optionsAtMedia = options.breakpoints || {}\n    const matchedMediaOptions = objectKeys(optionsAtMedia)\n      .filter((media) => ownerWindow.matchMedia(media).matches)\n      .map((media) => optionsAtMedia[media])\n      .reduce((a, mediaOption) => mergeOptions(a, mediaOption), {})\n\n    return mergeOptions(options, matchedMediaOptions)\n  }\n\n  function optionsMediaQueries(optionsList: OptionsType[]): MediaQueryList[] {\n    return optionsList\n      .map((options) => objectKeys(options.breakpoints || {}))\n      .reduce((acc, mediaQueries) => acc.concat(mediaQueries), [])\n      .map(ownerWindow.matchMedia)\n  }\n\n  const self: OptionsHandlerType = {\n    mergeOptions,\n    optionsAtMedia,\n    optionsMediaQueries\n  }\n  return self\n}\n","import { Engine, EngineType } from './Engine'\nimport { EventStore } from './EventStore'\nimport { EventHandler, EventHandlerType } from './EventHandler'\nimport { defaultOptions, EmblaOptionsType, OptionsType } from './Options'\nimport { OptionsHandler } from './OptionsHandler'\nimport { PluginsHandler } from './PluginsHandler'\nimport { EmblaPluginsType, EmblaPluginType } from './Plugins'\nimport { isString, WindowType } from './utils'\n\nexport type EmblaCarouselType = {\n  canScrollNext: () => boolean\n  canScrollPrev: () => boolean\n  containerNode: () => HTMLElement\n  internalEngine: () => EngineType\n  destroy: () => void\n  off: EventHandlerType['off']\n  on: EventHandlerType['on']\n  emit: EventHandlerType['emit']\n  plugins: () => EmblaPluginsType\n  previousScrollSnap: () => number\n  reInit: (options?: EmblaOptionsType, plugins?: EmblaPluginType[]) => void\n  rootNode: () => HTMLElement\n  scrollNext: (jump?: boolean) => void\n  scrollPrev: (jump?: boolean) => void\n  scrollProgress: () => number\n  scrollSnapList: () => number[]\n  scrollTo: (index: number, jump?: boolean) => void\n  selectedScrollSnap: () => number\n  slideNodes: () => HTMLElement[]\n  slidesInView: () => number[]\n  slidesNotInView: () => number[]\n}\n\nfunction EmblaCarousel(\n  root: HTMLElement,\n  userOptions?: EmblaOptionsType,\n  userPlugins?: EmblaPluginType[]\n): EmblaCarouselType {\n  const ownerDocument = root.ownerDocument\n  const ownerWindow = <WindowType>ownerDocument.defaultView\n  const optionsHandler = OptionsHandler(ownerWindow)\n  const pluginsHandler = PluginsHandler(optionsHandler)\n  const mediaHandlers = EventStore()\n  const eventHandler = EventHandler()\n  const { mergeOptions, optionsAtMedia, optionsMediaQueries } = optionsHandler\n  const { on, off, emit } = eventHandler\n  const reInit = reActivate\n\n  let destroyed = false\n  let engine: EngineType\n  let optionsBase = mergeOptions(defaultOptions, EmblaCarousel.globalOptions)\n  let options = mergeOptions(optionsBase)\n  let pluginList: EmblaPluginType[] = []\n  let pluginApis: EmblaPluginsType\n\n  let container: HTMLElement\n  let slides: HTMLElement[]\n\n  function storeElements(): void {\n    const { container: userContainer, slides: userSlides } = options\n\n    const customContainer = isString(userContainer)\n      ? root.querySelector(userContainer)\n      : userContainer\n    container = <HTMLElement>(customContainer || root.children[0])\n\n    const customSlides = isString(userSlides)\n      ? container.querySelectorAll(userSlides)\n      : userSlides\n    slides = <HTMLElement[]>[].slice.call(customSlides || container.children)\n  }\n\n  function createEngine(options: OptionsType): EngineType {\n    const engine = Engine(\n      root,\n      container,\n      slides,\n      ownerDocument,\n      ownerWindow,\n      options,\n      eventHandler\n    )\n\n    if (options.loop && !engine.slideLooper.canLoop()) {\n      const optionsWithoutLoop = Object.assign({}, options, { loop: false })\n      return createEngine(optionsWithoutLoop)\n    }\n    return engine\n  }\n\n  function activate(\n    withOptions?: EmblaOptionsType,\n    withPlugins?: EmblaPluginType[]\n  ): void {\n    if (destroyed) return\n\n    optionsBase = mergeOptions(optionsBase, withOptions)\n    options = optionsAtMedia(optionsBase)\n    pluginList = withPlugins || pluginList\n\n    storeElements()\n\n    engine = createEngine(options)\n\n    optionsMediaQueries([\n      optionsBase,\n      ...pluginList.map(({ options }) => options)\n    ]).forEach((query) => mediaHandlers.add(query, 'change', reActivate))\n\n    if (!options.active) return\n\n    engine.translate.to(engine.location.get())\n    engine.animation.init()\n    engine.slidesInView.init()\n    engine.slideFocus.init()\n    engine.eventHandler.init(self)\n    engine.resizeHandler.init(self)\n    engine.slidesHandler.init(self)\n\n    if (engine.options.loop) engine.slideLooper.loop()\n    if (container.offsetParent && slides.length) engine.dragHandler.init(self)\n\n    pluginApis = pluginsHandler.init(self, pluginList)\n  }\n\n  function reActivate(\n    withOptions?: EmblaOptionsType,\n    withPlugins?: EmblaPluginType[]\n  ): void {\n    const startIndex = selectedScrollSnap()\n    deActivate()\n    activate(mergeOptions({ startIndex }, withOptions), withPlugins)\n    eventHandler.emit('reInit')\n  }\n\n  function deActivate(): void {\n    engine.dragHandler.destroy()\n    engine.eventStore.clear()\n    engine.translate.clear()\n    engine.slideLooper.clear()\n    engine.resizeHandler.destroy()\n    engine.slidesHandler.destroy()\n    engine.slidesInView.destroy()\n    engine.animation.destroy()\n    pluginsHandler.destroy()\n    mediaHandlers.clear()\n  }\n\n  function destroy(): void {\n    if (destroyed) return\n    destroyed = true\n    mediaHandlers.clear()\n    deActivate()\n    eventHandler.emit('destroy')\n  }\n\n  function scrollTo(index: number, jump?: boolean, direction?: number): void {\n    if (!options.active || destroyed) return\n    engine.scrollBody\n      .useBaseFriction()\n      .useDuration(jump === true ? 0 : options.duration)\n    engine.scrollTo.index(index, direction || 0)\n  }\n\n  function scrollNext(jump?: boolean): void {\n    const next = engine.index.add(1).get()\n    scrollTo(next, jump, -1)\n  }\n\n  function scrollPrev(jump?: boolean): void {\n    const prev = engine.index.add(-1).get()\n    scrollTo(prev, jump, 1)\n  }\n\n  function canScrollNext(): boolean {\n    const next = engine.index.add(1).get()\n    return next !== selectedScrollSnap()\n  }\n\n  function canScrollPrev(): boolean {\n    const prev = engine.index.add(-1).get()\n    return prev !== selectedScrollSnap()\n  }\n\n  function scrollSnapList(): number[] {\n    return engine.scrollSnapList\n  }\n\n  function scrollProgress(): number {\n    return engine.scrollProgress.get(engine.location.get())\n  }\n\n  function selectedScrollSnap(): number {\n    return engine.index.get()\n  }\n\n  function previousScrollSnap(): number {\n    return engine.indexPrevious.get()\n  }\n\n  function slidesInView(): number[] {\n    return engine.slidesInView.get()\n  }\n\n  function slidesNotInView(): number[] {\n    return engine.slidesInView.get(false)\n  }\n\n  function plugins(): EmblaPluginsType {\n    return pluginApis\n  }\n\n  function internalEngine(): EngineType {\n    return engine\n  }\n\n  function rootNode(): HTMLElement {\n    return root\n  }\n\n  function containerNode(): HTMLElement {\n    return container\n  }\n\n  function slideNodes(): HTMLElement[] {\n    return slides\n  }\n\n  const self: EmblaCarouselType = {\n    canScrollNext,\n    canScrollPrev,\n    containerNode,\n    internalEngine,\n    destroy,\n    off,\n    on,\n    emit,\n    plugins,\n    previousScrollSnap,\n    reInit,\n    rootNode,\n    scrollNext,\n    scrollPrev,\n    scrollProgress,\n    scrollSnapList,\n    scrollTo,\n    selectedScrollSnap,\n    slideNodes,\n    slidesInView,\n    slidesNotInView\n  }\n\n  activate(userOptions, userPlugins)\n  setTimeout(() => eventHandler.emit('init'), 0)\n  return self\n}\n\nEmblaCarousel.globalOptions = <EmblaOptionsType | undefined>undefined\n\nexport default EmblaCarousel\n","import { EmblaCarouselType } from './EmblaCarousel'\nimport { OptionsHandlerType } from './OptionsHandler'\nimport { EmblaPluginsType, EmblaPluginType } from './Plugins'\n\nexport type PluginsHandlerType = {\n  init: (\n    emblaApi: EmblaCarouselType,\n    plugins: EmblaPluginType[]\n  ) => EmblaPluginsType\n  destroy: () => void\n}\n\nexport function PluginsHandler(\n  optionsHandler: OptionsHandlerType\n): PluginsHandlerType {\n  let activePlugins: EmblaPluginType[] = []\n\n  function init(\n    emblaApi: EmblaCarouselType,\n    plugins: EmblaPluginType[]\n  ): EmblaPluginsType {\n    activePlugins = plugins.filter(\n      ({ options }) => optionsHandler.optionsAtMedia(options).active !== false\n    )\n    activePlugins.forEach((plugin) => plugin.init(emblaApi, optionsHandler))\n\n    return plugins.reduce(\n      (map, plugin) => Object.assign(map, { [plugin.name]: plugin }),\n      {}\n    )\n  }\n\n  function destroy(): void {\n    activePlugins = activePlugins.filter((plugin) => plugin.destroy())\n  }\n\n  const self: PluginsHandlerType = {\n    init,\n    destroy\n  }\n  return self\n}\n","import { EmblaCarouselType } from './EmblaCarousel'\n\ntype CallbackType = (emblaApi: EmblaCarouselType, evt: EmblaEventType) => void\ntype ListenersType = Partial<{ [key in EmblaEventType]: CallbackType[] }>\n\nexport type EmblaEventType = EmblaEventListType[keyof EmblaEventListType]\n\nexport interface EmblaEventListType {\n  init: 'init'\n  pointerDown: 'pointerDown'\n  pointerUp: 'pointerUp'\n  slidesChanged: 'slidesChanged'\n  slidesInView: 'slidesInView'\n  scroll: 'scroll'\n  select: 'select'\n  settle: 'settle'\n  destroy: 'destroy'\n  reInit: 'reInit'\n  resize: 'resize'\n}\n\nexport type EventHandlerType = {\n  init: (emblaApi: EmblaCarouselType) => void\n  emit: (evt: EmblaEventType) => EventHandlerType\n  on: (evt: EmblaEventType, cb: CallbackType) => EventHandlerType\n  off: (evt: EmblaEventType, cb: CallbackType) => EventHandlerType\n}\n\nexport function EventHandler(): EventHandlerType {\n  const listeners: ListenersType = {}\n  let api: EmblaCarouselType\n\n  function init(emblaApi: EmblaCarouselType): void {\n    api = emblaApi\n  }\n\n  function getListeners(evt: EmblaEventType): CallbackType[] {\n    return listeners[evt] || []\n  }\n\n  function emit(evt: EmblaEventType): EventHandlerType {\n    getListeners(evt).forEach((e) => e(api, evt))\n    return self\n  }\n\n  function on(evt: EmblaEventType, cb: CallbackType): EventHandlerType {\n    listeners[evt] = getListeners(evt).concat([cb])\n    return self\n  }\n\n  function off(evt: EmblaEventType, cb: CallbackType): EventHandlerType {\n    listeners[evt] = getListeners(evt).filter((e) => e !== cb)\n    return self\n  }\n\n  const self: EventHandlerType = {\n    init,\n    emit,\n    off,\n    on\n  }\n  return self\n}\n","const addTogglePrevNextBtnsActive = (emblaApi, prevBtn, nextBtn) => {\n  const togglePrevNextBtnsState = () => {\n    if (emblaApi.canScrollPrev()) prevBtn.removeAttribute('disabled');\n    else prevBtn.setAttribute('disabled', 'disabled');\n\n    if (emblaApi.canScrollNext()) nextBtn.removeAttribute('disabled');\n    else nextBtn.setAttribute('disabled', 'disabled');\n  };\n\n  emblaApi\n    .on('select', togglePrevNextBtnsState)\n    .on('init', togglePrevNextBtnsState)\n    .on('reInit', togglePrevNextBtnsState);\n\n  return () => {\n    prevBtn.removeAttribute('disabled');\n    nextBtn.removeAttribute('disabled');\n  };\n};\n\nexport const addPrevNextBtnsClickHandlers = (emblaApi, prevBtn, nextBtn) => {\n  const scrollPrev = () => {\n    emblaApi.scrollPrev();\n  };\n  const scrollNext = () => {\n    emblaApi.scrollNext();\n  };\n  prevBtn.addEventListener('click', scrollPrev, false);\n  nextBtn.addEventListener('click', scrollNext, false);\n\n  const removeTogglePrevNextBtnsActive = addTogglePrevNextBtnsActive(\n    emblaApi,\n    prevBtn,\n    nextBtn\n  );\n\n  return () => {\n    removeTogglePrevNextBtnsActive();\n    prevBtn.removeEventListener('click', scrollPrev, false);\n    nextBtn.removeEventListener('click', scrollNext, false);\n  };\n};\n","import EmblaCarousel from 'embla-carousel';\nimport { addPrevNextBtnsClickHandlers } from './embala/EmbalaCarouselArrowButton';\nimport { addDotBtnsAndClickHandlers } from './embala/EmbalaCarouselDotButton';\n\nconst OPTIONS = { loop: false };\n\nconst emblaNode = document.querySelector('.embla');\nconst viewportNode = emblaNode.querySelector('.embla__viewport');\nconst prevBtnNode = emblaNode.querySelector('.embla__button--prev');\nconst nextBtnNode = emblaNode.querySelector('.embla__button--next');\nconst dotsNode = emblaNode.querySelector('.embla__dots');\n\nconst emblaApi = EmblaCarousel(viewportNode, OPTIONS);\n\nconst removePrevNextBtnsClickHandlers = addPrevNextBtnsClickHandlers(\n  emblaApi,\n  prevBtnNode,\n  nextBtnNode\n);\nconst removeDotBtnsAndClickHandlers = addDotBtnsAndClickHandlers(\n  emblaApi,\n  dotsNode\n);\n\nemblaApi.on('destroy', removePrevNextBtnsClickHandlers);\nemblaApi.on('destroy', removeDotBtnsAndClickHandlers);\n","export const addDotBtnsAndClickHandlers = (emblaApi, dotsNode) => {\n  let dotNodes = [];\n\n  const addDotBtnsWithClickHandlers = () => {\n    dotsNode.innerHTML = emblaApi\n      .scrollSnapList()\n      .map(() => '<button class=\"embla__dot\" type=\"button\"></button>')\n      .join('');\n\n    const scrollTo = index => {\n      emblaApi.scrollTo(index);\n    };\n\n    dotNodes = Array.from(dotsNode.querySelectorAll('.embla__dot'));\n    dotNodes.forEach((dotNode, index) => {\n      dotNode.addEventListener('click', () => scrollTo(index), false);\n    });\n  };\n\n  const toggleDotBtnsActive = () => {\n    const previous = emblaApi.previousScrollSnap();\n    const selected = emblaApi.selectedScrollSnap();\n    dotNodes[previous].classList.remove('embla__dot--selected');\n    dotNodes[selected].classList.add('embla__dot--selected');\n  };\n\n  emblaApi\n    .on('init', addDotBtnsWithClickHandlers)\n    .on('reInit', addDotBtnsWithClickHandlers)\n    .on('init', toggleDotBtnsActive)\n    .on('reInit', toggleDotBtnsActive)\n    .on('select', toggleDotBtnsActive);\n\n  return () => {\n    dotsNode.innerHTML = '';\n  };\n};\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = throttle;\n","import throttle from 'lodash.throttle';\n\nconst STORAGE_KEY = 'feedback-msg';\n\nconst contactFormData = {};\n\nconst refs = {\n  form: document.querySelector('.js-contact-form'),\n};\nrefs.form.addEventListener('submit', onFormSubmit);\nrefs.form.addEventListener('input', throttle(onTextInput, 200));\n\npopulateMessage();\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  evt.currentTarget.reset();\n  localStorage.removeItem(STORAGE_KEY);\n}\n\nfunction onTextInput(evt) {\n  contactFormData[evt.target.name] = evt.target.value;\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(contactFormData));\n}\n\nfunction populateMessage() {\n  const savedMessage = JSON.parse(localStorage.getItem(STORAGE_KEY));\n  if (savedMessage) {\n    Object.entries(savedMessage).forEach(([name, value]) => {\n      refs.form.elements[name].value = value;\n    });\n  }\n}\n"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$463e2eaa341d5323$exports","URL","resolve","import","meta","url","toString","$70fd2c346c933e11$exports","$4fd2302ae7875d17$exports","$0538f22b403aa388$exports","$4e20bfa12580175a$export$2e2bcd8739ae039","name","imgURL","$parcel$interopDefault","width","$417e4604a575d520$var$partnersContainer","document","querySelector","$417e4604a575d520$var$partnerCardMarkup","map","join","insertAdjacentHTML","addEventListener","evt","target","classList","contains","parentPartnerCard","closest","currentActiveCard","remove","$417e4604a575d520$var$removeActiveCardClass","card","add","refs","openMenuBtn","closeMenuBtn","menu","body","menuList","toggleMenu","toggle","$6b55d95607af77de$exports","$923b2328b2fdee95$exports","$938c1b49cb4a086f$exports","$08fd6d857f50e347$exports","$b262e86ece7a83e7$exports","$b7deb16627e76090$export$2e2bcd8739ae039","description","$d0d1e47160cbed98$var$teamsContainer","$d0d1e47160cbed98$var$teamCardMarkup","$8a7e756c566dd1ea$var$refs","openModalBtns","querySelectorAll","closeModalBtns","$8a7e756c566dd1ea$var$onOpenModal","event","window","$8a7e756c566dd1ea$var$onEscKeyPress","modalId","currentTarget","dataset","backdrop","getElementById","$8a7e756c566dd1ea$var$onBackdropClick","$8a7e756c566dd1ea$var$onCloseModal","removeEventListener","code","isNumber","subject","isString","isBoolean","isObject","prototype","call","mathAbs","n","Math","abs","mathSign","sign","deltaAbs","valueB","valueA","arrayKeys","array","objectKeys","Number","arrayLast","arrayLastIndex","max","arrayIsLastIndex","index","arrayFromNumber","startAt","Array","from","_","object","objectsMergeDeep","objectA","objectB","reduce","mergedObjects","currentObject","forEach","key","areObjects","isMouseEvent","ownerWindow","MouseEvent","EventStore","listeners","self","node","type","handler","options","passive","removeListener","legacyMediaQueryList","addListener","push","filter","Animations","ownerDocument","update","render","documentVisibleHandler","timeStep","lastTimeStamp","lag","animationFrame","animate","timeStamp","elapsed","lagOffset","requestAnimationFrame","stop","cancelAnimationFrame","hidden","clear","Limit","min","reachedMin","reachedMax","reachedAny","ceil","Counter","start","loop","constrain","loopEnd","counter","withinLimit","get","clone","set","DragHandler","axis","rootNode","dragTracker","location","animation","scrollTo","scrollBody","scrollTarget","eventHandler","percentOfView","dragFree","dragThreshold","skipSnaps","baseFriction","watchDrag","cross","crossAxis","direction","focusNodes","nonPassiveEvent","initEvents","dragEvents","goToNextThreshold","measure","snapForceBoost","mouse","touch","freeForceBoost","baseSpeed","isMoving","startScroll","startCross","pointerIsDown","preventScroll","preventClick","isMouse","move","lastScroll","readPoint","lastCross","diffScroll","diffCross","cancelable","up","diff","pointerMove","useFriction","useDuration","preventDefault","targetChanged","byDistance","rawForce","pointerUp","force","next","baseForce","distance","byIndex","allowedForce","forceFactor","factorAbs","speed","friction","emit","click","stopPropagation","emblaApi","downIfAllowed","isMouseEvt","buttons","button","nodeName","includes","isFocusNode","pointerDown","addDragEvents","down","DragTracker","startEvent","lastEvent","readTime","evtAxis","coord","scroll","touches","expired","diffDrag","diffTime","ResizeHandler","container","slides","watchResize","nodeRects","resizeObserver","containerSize","slideSizes","destroyed","readSize","measureSize","ResizeObserver","entries","entry","isContainer","slideIndex","indexOf","lastSize","reInit","defaultCallback","concat","observe","disconnect","ScrollBounds","limit","offsetLocation","pullBackThreshold","edgeOffsetTolerance","frictionLimit","disabled","edge","diffToEdge","diffToTarget","subtract","useBaseFriction","active","ScrollLooper","contentSize","vectors","shouldLoop","loopDistance","v","ScrollTarget","scrollSnaps","targetVector","removeOffset","minDistance","distances","sort","a","b","shortcut","targets","matchingTargets","t","snap","targetSnapDistance","ascDiffsToSnaps","d1","d2","findTargetSnap","reachedBound","Vector1D","initialValue","value","normalizeInput","Translate","translate","containerStyle","style","transform","getAttribute","removeAttribute","SlideLooper","viewSize","slideSizesWithGaps","snaps","ascItems","descItems","reverse","loopPoints","gap","findLoopPoints","slidesInGap","startPoints","endPoints","removeSlideSizes","indexes","offset","isEndEdge","slideBounds","end","findSlideBounds","initial","altered","boundEdge","loopPoint","slideLocation","every","shiftLocation","to","SlidesHandler","watchSlides","mutationObserver","MutationObserver","mutations","mutation","childList","SlidesInView","threshold","intersectionEntryMap","intersectionObserver","inViewCache","notInViewCache","IntersectionObserver","root","parentElement","slide","inView","slideIndexes","list","parseInt","isIntersecting","createInViewList","SlidesToScroll","slidesToScroll","containerRect","slideRects","startGap","endGap","pixelTolerance","startEdge","endEdge","groupByNumber","groupSize","slice","byNumber","groups","rectB","rectA","isFirst","isLast","edgeA","edgeB","gapA","chunkSize","currentSize","previousSize","bySize","Engine","align","scrollAxis","startIndex","duration","inViewThreshold","groupSlides","containScroll","offsetTop","offsetLeft","offsetWidth","offsetHeight","top","right","bottom","left","height","contentDirection","isRightToLeft","isVertical","nodeRect","Axis","PercentOfView","alignment","predefined","Alignment","containSnaps","readEdgeGap","withEdgeGap","slideRect","measureStartGap","getComputedStyle","parseFloat","getPropertyValue","measureEndGap","rect","rects","SlideSizes","snapsAligned","alignments","g","ScrollSnaps","snapsContained","scrollContainLimit","scrollBounds","snapsBounded","snapAligned","usePixelTolerance","scrollBound","toFixed","startSnap","endSnap","lastIndexOf","findScrollContainLimit","bound","measureContained","ScrollContain","ScrollLimit","indexPrevious","dragHandler","seek","engine","scrollLooper","slideLooper","velocity","hasSettled","settled","startLocation","baseDuration","bodyVelocity","scrollDirection","scrollDuration","scrollFriction","rawLocation","rawLocationPrevious","directionDiff","ScrollBody","indexCurrent","distanceDiff","indexDiff","targetIndex","ScrollTo","scrollProgress","ScrollProgress","eventStore","slidesInView","slideRegistry","groupedSlideIndexes","doNotContain","group","createSlideRegistry","SlideRegistry","slideFocus","lastTabPressTime","registerTabPress","Date","getTime","addSlideFocusEvent","focus","scrollLeft","findIndex","capture","SlideFocus","resizeHandler","scrollSnapList","slidesHandler","elem","defaultOptions","breakpoints","OptionsHandler","mergeOptions","optionsA","optionsB","optionsAtMedia","matchedMediaOptions","media","matchMedia","matches","mediaOption","optionsList","acc","mediaQueries","EmblaCarousel","userOptions","userPlugins","defaultView","optionsHandler","pluginsHandler","activePlugins","plugins","plugin","init","assign","destroy","PluginsHandler","mediaHandlers","EventHandler","api","getListeners","e","cb","optionsMediaQueries","on","off","reActivate","pluginApis","optionsBase","globalOptions","pluginList","createEngine","canLoop","activate","withOptions","withPlugins","userContainer","userSlides","customContainer","children","customSlides","storeElements","query","offsetParent","selectedScrollSnap","deActivate","jump","setTimeout","undefined","$94596d211198e450$var$emblaNode","$94596d211198e450$var$viewportNode","$94596d211198e450$var$prevBtnNode","$94596d211198e450$var$nextBtnNode","$94596d211198e450$var$dotsNode","$94596d211198e450$var$emblaApi","$fabb57550a3e4478$export$2e2bcd8739ae039","$94596d211198e450$var$removePrevNextBtnsClickHandlers","prevBtn","nextBtn","scrollPrev","scrollNext","removeTogglePrevNextBtnsActive","togglePrevNextBtnsState","canScrollPrev","setAttribute","canScrollNext","$29693cc5c3dedf98$var$addTogglePrevNextBtnsActive","$94596d211198e450$var$removeDotBtnsAndClickHandlers","dotsNode","dotNodes","addDotBtnsWithClickHandlers","innerHTML","dotNode","toggleDotBtnsActive","previous","previousScrollSnap","selected","$7244391317ff913c$var$reTrim","$7244391317ff913c$var$reIsBadHex","$7244391317ff913c$var$reIsBinary","$7244391317ff913c$var$reIsOctal","$7244391317ff913c$var$freeParseInt","$7244391317ff913c$var$freeGlobal","$parcel$global","$7244391317ff913c$var$freeSelf","$7244391317ff913c$var$root","Function","$7244391317ff913c$var$objectToString","$7244391317ff913c$var$nativeMax","$7244391317ff913c$var$nativeMin","$7244391317ff913c$var$now","now","$7244391317ff913c$var$debounce","func","wait","lastArgs","lastThis","maxWait","result1","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","apply","leadingEdge","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","result","remainingWait","debounced","isInvoking","arguments","this","$7244391317ff913c$var$toNumber","$7244391317ff913c$var$isObject","cancel","clearTimeout","flush","$7244391317ff913c$var$isObjectLike","$7244391317ff913c$var$isSymbol","other","valueOf","replace","isBinary","test","$7244391317ff913c$exports","$3789aeb6d82d6094$var$contactFormData","$3789aeb6d82d6094$var$refs","form","reset","localStorage","removeItem","setItem","stringify","savedMessage","getItem","elements","$3789aeb6d82d6094$var$populateMessage"],"version":3,"file":"index.41b5012f.js.map"}